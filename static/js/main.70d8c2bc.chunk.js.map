{"version":3,"sources":["assets/location-dot-solid.svg","assets/picture-placeholder.png","components/Legend.js","components/Sidebar.js","components/MapView.js","components/Timebar.js","components/StaticFilterOptions.js","components/SearchBox.js","components/SearchBoxLocation.js","components/SearchBoxPartner.js","components/SearchBoxStatus.js","components/SearchBoxTopic.js","components/SearchBoxTarget.js","components/SearchBoxProjectType.js","components/Search.js","components/DataBlock.js","components/DataBlocksList.js","App.js","index.js"],"names":["module","exports","Legend","colors","React","createElement","className","map","layer","i","key","style","backgroundColor","formatNumber","number","toLocaleString","maximumFractionDigits","calculatePercentage","value","total","toFixed","Sidebar","_ref","countryData","level1Data","level2Data","regionInfo","selectedYear","selectedMonth","appendedData","setAppendedData","useState","useEffect","mergedData","features","clickedKey","foundRow","find","feature","properties","Key","Name","Population","concat","Phase1","Percent1","parseFloat","Phase2","Percent2","Phase3","Percent3","Phase4","Percent4","Phase5","Percent5","src","alt","mapboxgl","accessToken","MapView","onChangeRegion","mapContainer","useRef","lng","setLng","lat","setLat","zoom","setZoom","hoveredRegion","setHoveredRegion","handleMove","current","getCenter","getZoom","layerNames","createLayerClickHandler","e","console","log","lngLat","newHoveredRegion","name","currentZoom","maxZoom","targetZoom","easeTo","center","duration","curve","popup","remove","Popup","maxWidth","maxHeight","setLngLat","setHTML","Name_2","addTo","isMounted","forEach","layerName","getLayer","setPaintProperty","yearValue","parseInt","monthValue","getMapboxExpression","Map","container","on","addControl","NavigationControl","ref","Timebar","onChangeYear","onChangeMonth","setSelectedYear","setSelectedMonth","handleMonthButtonClick","month","monthNumber","March","June","November","undefined","type","min","max","step","onChange","event","sliderValue","target","selected","Math","round","maxYear","onClick","StaticFilterOptions","title","options","selectedOptions","setSelectedOptions","showDropdown","setShowDropdown","searchText","setSearchText","dropdownRef","handleDocumentClick","contains","document","addEventListener","removeEventListener","filteredOptions","filter","option","toLowerCase","includes","placeholder","id","checked","length","handleSelectAll","htmlFor","selectedOption","handleOptionToggle","SearchBox","searchQuery","setSearchQuery","Countries","SearchBoxLocation","selectedLocations","setSelectedLocations","staticPartner","SearchBoxPartner","selectedPartner","setSelectedPartner","StatusOptions","SearchBoxStatus","selectedStatus","setSelectedStatus","TopicOptions","SearchBoxTopic","selectedTopics","setSelectedTopics","TargetOptions","SearchBoxTarget","selectedTargets","setSelectedTargets","staticProjectTypes","SearchBoxProjectTypes","selectedProjectTypes","setselectedProjectTypes","Search","DataBlock","project","location","partners","detail","status","color","picPlaceholder","locationIcon","href","rel","DataBlocksList","filteredDataBlock","viewMode","setViewMode","countryProjectArray","projectsPerCountry","reduce","acc","entry","Location","split","trim","modifiedLocation","replace","countryFeature","countryName","Country","country","countProjects","centroid","countryGeometry","geometry","countryCentroid","Object","values","_ref2","toggleViewMode","exportToCSV","header","keys","join","dataRows","csvContent","encodedUri","encodeURI","link","setAttribute","body","appendChild","click","removeChild","index","Project","Partners","Detail","Status","App","setCountryData","setLevel1Data","setLevel2Data","filteredData","setFilteredData","filteredCountryData","filteredLevel1Data","filteredLevel2Data","handleYearChange","year","handleMonthChange","async","responseCountry","axios","get","data","responseLevel1","responseLevel2","error","fetchData","partnersArray","partner","some","locationsArray","selectedLocation","statusArray","topicsArray","Topic","topic","selectedTopic","targetsArray","Target","selectedTarget","projectTypesArray","ProjectType","projectType","region","ReactDOM","render","StrictMode","getElementById"],"mappings":"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Y,CAChB,QACA,eACA,aACA,WACA,OACA,mBACA,SACA,QACA,SACA,gBACA,UACA,OACA,aACA,QACA,UACA,UACA,eACA,QAeaC,MAXWrJ,IAAkD,IAAjD,kBAAEsJ,EAAiB,qBAAEC,GAAsBvJ,EACpE,OACElB,IAAAC,cAACsI,EAAmB,CAClBC,MAAM,WACNC,QAAS6B,EACT5B,gBAAiB8B,EACjB7B,mBAAoB8B,KC5B1B,MAAMC,EAAgB,CAClB,OACA,iBACA,mBACA,MACA,0BACA,yBACA,OACA,uBACA,KACA,qCACA,SACA,gBACA,MACA,QACA,aACA,8BACA,OACA,MACA,oBACA,iBACA,SACA,aAgBWC,MAXUzJ,IAA8C,IAA7C,gBAAE0J,EAAe,mBAAEC,GAAoB3J,EAC/D,OACElB,IAAAC,cAACsI,EAAmB,CAClBC,MAAM,UACNC,QAASiC,EACThC,gBAAiBkC,EACjBjC,mBAAoBkC,KCjC1B,MAAMC,EAAgB,CAClB,UACA,YACA,eAcWC,MAXS7J,IAA4C,IAA3C,eAAE8J,EAAc,kBAAEC,GAAmB/J,EAC5D,OACElB,IAAAC,cAACsI,EAAmB,CAClBC,MAAM,SACNC,QAASqC,EACTpC,gBAAiBsC,EACjBrC,mBAAoBsC,KCZ1B,MAAMC,EAAe,CACnB,cACA,0BACA,0BACA,0BACA,oEACA,wBACA,sCACA,uBACA,2BACA,SACA,qBACA,0BACA,2BACA,aACA,aACA,QACA,oBAeaC,MAXQjK,IAA4C,IAA3C,eAAEkK,EAAc,kBAAEC,GAAmBnK,EAC3D,OACElB,IAAAC,cAACsI,EAAmB,CAClBC,MAAM,QACNC,QAASyC,EACTxC,gBAAiB0C,EACjBzC,mBAAoB0C,KC3B1B,MAAMC,EAAgB,CACpB,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UAcaC,MAXSrK,IAA8C,IAA7C,gBAAEsK,EAAe,mBAAEC,GAAoBvK,EAC9D,OACElB,IAAAC,cAACsI,EAAmB,CAClBC,MAAM,MACNC,QAAS6C,EACT5C,gBAAiB8C,EACjB7C,mBAA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","file":"static/js/main.70d8c2bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/location-dot-solid.835ddace.svg\";","module.exports = __webpack_public_path__ + \"static/media/picture-placeholder.ae02891c.png\";","import React from 'react';\nimport './Legend.css';\n\nfunction Legend() {\n    const layers = ['Phase 1', 'Phase 2', 'Phase 3', 'Phase 4', 'Phase 5', 'No data'];\n    const colors = ['#53ca57', '#ffe252', '#fa890f', '#eb3333', '#900101e3','#ffffff'];\n\n    return (\n        <nav className='legend'>\n            <div className='legend-container'>\n                {layers.map((layer, i) => (\n                    <div key={i} className='legend-item'>\n                        <span className='legend-key' style={{ backgroundColor: colors[i] }} />\n                        <span className='legend-value'>{layer}</span>\n                    </div>\n                ))}\n            </div>\n        </nav>\n    );\n}\n\nexport default Legend;\n","import React, { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport App from '../App';\n\nfunction Sidebar({ countryData, level1Data, level2Data, regionInfo, selectedYear, selectedMonth }) { //REGIONINFO TRAE EL KEY\n  const [appendedData, setAppendedData] = useState([]);\n  \n\n  useEffect(() => {\n    if (countryData && level1Data && level2Data){\n        const mergedData = [ ...countryData.features, ...level1Data.features, ...level2Data.features ];\n        setAppendedData(mergedData);\n    };\n    \n  }, [regionInfo]);\n\n\n  if (!regionInfo) {\n    return null;\n  }\n\n  const clickedKey = regionInfo.key;\n\n  \n  let foundRow = null;\n  if (appendedData) {\n    foundRow = appendedData.find((feature) => feature.properties.Key === clickedKey);\n\n  }\n\n  const properties = foundRow ? foundRow.properties : {};\n\n  const Name= properties['Name_2'];\n  const Population = formatNumber(properties[`POP-${selectedYear}-0${selectedMonth}`]);\n  const Phase1 = formatNumber(properties[`PH1-${selectedYear}-0${selectedMonth}`]);\n  const Percent1 = calculatePercentage(\n    parseFloat(properties[`PH1-${selectedYear}-0${selectedMonth}`]),\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\n  );\n\n  const Phase2 = formatNumber(properties[`PH2-${selectedYear}-0${selectedMonth}`]);\n  const Percent2 = calculatePercentage(\n    parseFloat(properties[`PH2-${selectedYear}-0${selectedMonth}`]),\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\n  );\n  const Phase3 = formatNumber(properties[`PH3-${selectedYear}-0${selectedMonth}`]);\n  const Percent3 = calculatePercentage(\n    parseFloat(properties[`PH3-${selectedYear}-0${selectedMonth}`]),\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\n  );\n  const Phase4 = formatNumber(properties[`PH4-${selectedYear}-0${selectedMonth}`]);\n  const Percent4 = calculatePercentage(\n    parseFloat(properties[`PH4-${selectedYear}-0${selectedMonth}`]),\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\n  );\n  const Phase5 = formatNumber(properties[`PH5-${selectedYear}-0${selectedMonth}`]);\n  const Percent5 = calculatePercentage(\n    parseFloat(properties[`PH5-${selectedYear}-0${selectedMonth}`]),\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\n  );\n\n  return (\n    <nav className='sidebar'>\n      <div className='sidebar-container'>\n        <div className='logo'>\n          <img src='/images/family_icon.jpg' alt='Family Icon' />\n          <span className='logo-text'>Food and nutrition situation {selectedYear} </span> {/* adding selected month as trial*/}\n        </div>\n\n        <div className='region-info'>\n          {/* Display information about the hovered region */}\n          <h2>\n            <div>\n              <p>\n              {Name}\n              </p>\n            </div>\n          </h2>\n\n          <div className='info-row'>\n            <h4>Total population:</h4>\n            <p>{Population}</p>\n          </div>\n\n          <div className='info-row'>\n            <h4>Phase 1:</h4>\n            <p>{Phase1}</p>\n            <p>{Percent1}%</p>\n          </div>\n          <div className='info-row'>\n            <h4>Phase 2:</h4>\n            <p>{Phase2}</p>\n            <p>{Percent2}%</p>\n          </div>\n          <div className='info-row'>\n            <h4>Phase 3:</h4>\n            <p>{Phase3}</p>\n            <p>{Percent3}%</p>\n          </div>\n          <div className='info-row'>\n            <h4>Phase 4:</h4>\n            <p>{Phase4}</p>\n            <p>{Percent4}%</p>\n          </div>\n          <div className='info-row'>\n            <h4>Phase 5:</h4>\n            <p>{Phase5}</p>\n            <p>{Percent5}%</p>\n          </div>\n          {/* Add more fields as needed */}\n        </div>\n        {/* More sidebar content */}\n      </div>\n    </nav>\n  );\n}\n\nfunction formatNumber(number) {\n  return number ? number.toLocaleString('en-US', { maximumFractionDigits: 0 }) : '';\n}\n\nfunction calculatePercentage(value, total) {\n  const percentage = total ? ((value || 0) / total) * 100 : 0;\n  return percentage.toFixed(2); // Displaying percentage with two decimal places\n}\n\nexport default Sidebar;\n","\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport Legend from './Legend';\nimport App from '../App';\nimport './MapView.css';\nimport Sidebar from './Sidebar';\nimport { selected } from '@syncfusion/ej2-react-pivotview';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFyaWFuYWp2LSIsImEiOiJjbGs3eXJmbzEwYXR3M2RxbnRuOHVkaHV3In0.rVa0wb_O5OTeuk07J90w5A';\n\nfunction MapView({selectedYear, selectedMonth, onChangeRegion}) {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const [lng, setLng] = useState(0);\n  const [lat, setLat] = useState(17);\n  const [zoom, setZoom] = useState(3.4);\n  const [hoveredRegion, setHoveredRegion] = useState(null);\n\n  const initializeMap = () => {\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/marianajv-/cllf4b5be012q01pb6nqq4k5x',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    map.current.on('move', handleMove);\n    layerNames.forEach(layerName => {\n      map.current.on('click', layerName, createLayerClickHandler);\n    }); \n    map.current.addControl(\n      new mapboxgl.NavigationControl()); \n\n\n  };\n\n  const handleMove = () => {\n    setLng(map.current.getCenter().lng.toFixed(4));\n    setLat(map.current.getCenter().lat.toFixed(4));\n    setZoom(map.current.getZoom().toFixed(2));\n  };\n\n  const layerNames = ['output_country-2uwmmy', 'output_level1-5iewsu', 'output_level2-8nur76'];\n\n  const createLayerClickHandler = (e) => {// CLICKHANDLER si lo dejamos en key ya no tiene que depender de year, solo de la posicion \n    console.log('clickhandler ran', e.features)\n      \n    const feature = e.features[0];\n    const lngLat = e.lngLat;\n\n    const newHoveredRegion = {\n      name: feature.properties['Name_2'],\n      key: feature.properties['Key'] \n    };\n\n    // Center the map on the clicked point with a smooth fly animation\n    const currentZoom = map.current.getZoom();\n    let maxZoom;\n    if (currentZoom < 4.99) {\n      maxZoom = 4.99;\n    } else if (currentZoom > 4.99) {\n      maxZoom = 6.7;\n    }\n    const targetZoom = currentZoom + 0.5 <= maxZoom ? currentZoom + 1 : maxZoom; //prevent the map from zooming in too much\n    map.current.easeTo({\n      center: [lngLat.lng.toFixed(4), lngLat.lat.toFixed(4)], // Set the center to the clicked coordinates\n      zoom: targetZoom,\n      duration: 1000,\n      curve: 1\n    });\n\n    let popup = null;\n\n    if (popup) {\n      popup.remove();\n    }\n\n    popup = new mapboxgl.Popup({\n      maxWidth: '100px',\n      maxHeight: '50px',\n      className: 'custom-popup'\n    })\n    .setLngLat(lngLat)\n    .setHTML(`<h5>${feature.properties.Name_2}</h5>`)\n  .addTo(map.current);\n\n    onChangeRegion(newHoveredRegion);\n  };//CLICKHANDLER\n  \n// separating useffects\n\nuseEffect(() => {\n  let isMounted = true;\n\n  if (!map.current) {\n    initializeMap();\n  } else {\n    \n    layerNames.forEach(layerName => {\n      const existingLayer = map.current.getLayer(layerName);\n      if (existingLayer) {\n        map.current.setPaintProperty(\n          layerName,\n          'fill-color',\n          getMapboxExpression(selectedYear, selectedMonth)\n        );\n      }\n    });\n  }\n\n  return () => {\n    isMounted = false;\n  };\n}, [selectedYear, selectedMonth]);\n\nuseEffect(() => {\n  let isMounted = true;\n\n  if (map.current) {\n    map.current.on('move', handleMove);\n    \n  }\n\n  return () => {\n    isMounted = false;\n  };\n}, [lat, lng, zoom]);\n\n\n  \n    return (\n      <div className='view-container'>\n        \n        <div ref={mapContainer} className=\"map-container\" />\n\n        <Legend/>\n      </div>\n      \n    );\n  }\n\n  function getMapboxExpression(selectedYear, selectedMonth) {\n    const yearValue = parseInt(selectedYear);\n    const monthValue = parseInt(selectedMonth);\n    \n    return [\n      'case',\n      ['==', ['number', ['get', `CLAS-${yearValue}-0${monthValue}`]], 1], '#53ca57',\n      ['==', ['number', ['get', `CLAS-${yearValue}-0${monthValue}`]], 2], '#ffe252',\n      ['==', ['number', ['get', `CLAS-${yearValue}-0${monthValue}`]], 3], '#fa890f',\n      ['==', ['number', ['get', `CLAS-${yearValue}-0${monthValue}`]], 4], '#eb3333',\n      '#ffffff'\n    ];\n  }\n\n\nexport default MapView;\n","\nimport React, { useState } from 'react';\nimport './Timebar.css';\nimport MapView from './MapView';\n\n\nconst Timebar = ({ onChangeYear, onChangeMonth }) => {\n  const minYear = 2014;\n  const maxYear = 2023;\n  const [selectedYear, setSelectedYear] = useState(maxYear);\n  const [selectedMonth, setSelectedMonth] = useState(null);\n\n  const handleSliderChange = (event) => {\n    const yearRange = maxYear - minYear;\n    const sliderValue = parseFloat(event.target.value);\n    const selected = Math.round(minYear + sliderValue * yearRange);\n    setSelectedYear(selected);\n    if (onChangeYear) {\n      onChangeYear(selected);\n    }\n  };\n\n  const handleMonthButtonClick = (month) => {\n    const monthMap = {\n      March: 3,\n      June: 6,\n      November: 11,\n    };\n\n    const monthNumber = monthMap[month];\n    if (monthNumber !== undefined) {\n      setSelectedMonth(monthNumber);\n      if (onChangeMonth) {\n        onChangeMonth(monthNumber);\n      }\n    }\n  };\n\n  return (\n    \n    \n    <div className=\"timebar\">\n      <div className=\"year-bar\">\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.01\"\n          value={(selectedYear - minYear) / (maxYear - minYear)}\n          onChange={handleSliderChange}\n          className=\"slider\"\n        />\n        <div className=\"year-indicator\">{selectedYear}</div>\n      </div>\n      <div className=\"month-buttons\">\n        <button\n          className={selectedMonth === 3 ? 'selected' : ''}\n          onClick={() => handleMonthButtonClick('March')}\n        >\n          March\n        </button>\n        <button\n          className={selectedMonth === 6 ? 'selected' : ''}\n          onClick={() => handleMonthButtonClick('June')}\n        >\n          June\n        </button>\n        <button\n          className={selectedMonth === 11 ? 'selected' : ''}\n          onClick={() => handleMonthButtonClick('November')}\n        >\n          November\n        </button>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Timebar;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./StaticFilterOptions.css\";\n\nconst StaticFilterOptions = ({ title, options, selectedOptions, setSelectedOptions }) => {\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [searchText, setSearchText] = useState(\"\");\n\n  const dropdownRef = useRef(null);\n\n  const handleDocumentClick = (event) => {\n    if (!dropdownRef.current.contains(event.target)) {\n      setShowDropdown(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleDocumentClick);\n    return () => {\n      document.removeEventListener(\"click\", handleDocumentClick);\n    };\n  }, []);\n\n  const handleSelectAll = () => {\n    if (selectedOptions.length === options.length) {\n      setSelectedOptions([]);\n    } else {\n      setSelectedOptions(options);\n    }\n  };\n\n  const handleOptionToggle = (option) => {\n    if (selectedOptions.includes(option)) {\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\n    } else {\n      setSelectedOptions([...selectedOptions, option]);\n    }\n  };\n\n  const handleSearchChange = (e) => {\n    setSearchText(e.target.value);\n  };\n\n  const filteredOptions = options\n    .filter(option => option != null)\n    .filter((option) => option.toLowerCase().includes(searchText.toLowerCase())\n  );\n\n  return (\n    <div className=\"filter-container\">\n      <label>{title}:</label>\n      <div className=\"search-dropdown\" ref={dropdownRef}>\n        <input\n          type=\"text\"\n          placeholder={`Search by ${title}`}\n          value={searchText}\n          onChange={handleSearchChange}\n          onClick={() => setShowDropdown(true)}\n        />\n        {showDropdown && (\n          <div className=\"checkbox-list\">\n            <div>\n              <input\n                type=\"checkbox\"\n                id={`selectAll${title}`}\n                value={`selectAll${title}`}\n                checked={selectedOptions.length === options.length}\n                onChange={handleSelectAll}\n              />\n              <label htmlFor={`selectAll${title}`}>Select All</label>\n            </div>\n            {filteredOptions.map((option) => (\n              <div key={option}>\n                <input\n                  type=\"checkbox\"\n                  id={option}\n                  value={option}\n                  checked={selectedOptions.includes(option)}\n                  onChange={() => handleOptionToggle(option)}\n                />\n                <label htmlFor={option}>\n                  <span>{option}</span>\n                </label>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nStaticFilterOptions.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  selectedOptions: PropTypes.arrayOf(PropTypes.string).isRequired,\n  setSelectedOptions: PropTypes.func.isRequired,\n};\n\nexport default StaticFilterOptions;","import React from \"react\";\nimport \"../styles/SearchBox.css\";\n\nconst SearchBox = ({ searchQuery, setSearchQuery }) => {\n  return (\n    <div className=\"filter-container\">\n      <label>Project Name:</label>\n      <div className=\"search-dropdown\">\n        <input\n          type=\"text\"\n          placeholder=\"Search by Project Name\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\nimport StaticFilterOptions from \"./StaticFilterOptions\";\n\nconst Countries = [\n  \"Benin\",\n  \"Burkina Faso\",\n  \"Cabo Verde\",\n  \"Cameroon\",\n  \"Chad\",\n  \"Côte d'Ivoire\",\n  \"Gambia\",\n  \"Ghana\",\n  \"Guinea\",\n  \"Guinea-Bissau\",\n  \"Liberia\",\n  \"Mali\",\n  \"Mauritania\",\n  \"Niger\",\n  \"Nigeria\",\n  \"Senegal\",\n  \"Sierra Leone\",\n  \"Togo\"\n  // ... other country options\n];\n\nconst SearchBoxLocation = ({ selectedLocations, setSelectedLocations }) => {\n  return (\n    <StaticFilterOptions\n      title=\"Location\"\n      options={Countries}\n      selectedOptions={selectedLocations}\n      setSelectedOptions={setSelectedLocations}\n    />\n  );\n};\n\nexport default SearchBoxLocation;\n","import React from \"react\";\nimport StaticFilterOptions from \"./StaticFilterOptions\";\n\nconst staticPartner = [\n    \"AfDB\",\n    \"Austria - OEZA\",\n    \"Belgium - Enable\",\n    \"BID\",\n    \"Canada - Global Affairs\",\n    \"Danemark – DANIDA\",\n    \"FCDO\",\n    \"Espagne – AECID\",\n    \"EU\",\n    \"Fonds africain de développement\",\n    \"France\",\n    \"Germany - BMZ\",\n    \"HCR\",\n    \"Italy\",\n    \"Luxembourg\",\n    \"Netherlands (The) - MINBUZA\",\n    \"OEZA\",\n    \"SNV\",\n    \"Switzerland - SDC\",\n    \"The World Bank\",\n    \"UNICEF\",\n    \"USAID-USA\"\n    // ... other partner options\n\n];\n\nconst SearchBoxPartner = ({ selectedPartner, setSelectedPartner }) => {\n  return (\n    <StaticFilterOptions\n      title=\"Partner\"\n      options={staticPartner}\n      selectedOptions={selectedPartner}\n      setSelectedOptions={setSelectedPartner}\n    />\n  );\n};\n\nexport default SearchBoxPartner;\n","import React from \"react\";\nimport StaticFilterOptions from \"./StaticFilterOptions\";\n\nconst StatusOptions = [\n    \"ONGOING\",\n    \"COMPLETED\",\n    \"FORTHCOMING\",\n];\n\nconst SearchBoxStatus = ({ selectedStatus, setSelectedStatus }) => {\n  return (\n    <StaticFilterOptions\n      title=\"Status\"\n      options={StatusOptions}\n      selectedOptions={selectedStatus}\n      setSelectedOptions={setSelectedStatus}\n    />\n  );\n};\n\nexport default SearchBoxStatus;\n","import React from \"react\";\nimport StaticFilterOptions from \"./StaticFilterOptions\";\n\nconst TopicOptions = [\n  \"Agriculture\",\n  \"Livestock & pastoralism\",\n  \"Forestry & biodiversity\",\n  \"Fisheries & aquaculture\",\n  \"Natural resource management and Climate adaptation and mitigation\",\n  \"Employment & revenues\",\n  \"Food security and social protection\",\n  \"Nutrition and health\",\n  \"Demography and migration\",\n  \"Energy\",\n  \"Water & sanitation\",\n  \"Markets, prices & trade\",\n  \"Gender (Youth and women)\",\n  \"Governance\",\n  \"Resilience\",\n  \"Youth\",\n  \"Protection, paix\",\n  // ... other Topic options\n];\n\nconst SearchBoxTopic = ({ selectedTopics, setSelectedTopics }) => {\n  return (\n    <StaticFilterOptions\n      title=\"Topic\"\n      options={TopicOptions}\n      selectedOptions={selectedTopics}\n      setSelectedOptions={setSelectedTopics}\n    />\n  );\n};\n\nexport default SearchBoxTopic;\n","import React from \"react\";\nimport StaticFilterOptions from \"./StaticFilterOptions\";\n\nconst TargetOptions = [\n  \"SDG 1\",\n  \"SDG 2\",\n  \"SDG 3\",\n  \"SDG 4\",\n  \"SDG 5\",\n  \"SDG 6\",\n  \"SDG 7\",\n  \"SDG 8\",\n  \"SDG 9\",\n  \"SDG 10\",\n  \"SDG 11\",\n  \"SDG 12\",\n  \"SDG 13\",\n  \"SDG 14\",\n  \"SDG 15\",\n  \"SDG 16\",\n  \"SDG 17\",\n];\n\nconst SearchBoxTarget = ({ selectedTargets, setSelectedTargets }) => {\n  return (\n    <StaticFilterOptions\n      title=\"SDG\"\n      options={TargetOptions}\n      selectedOptions={selectedTargets}\n      setSelectedOptions={setSelectedTargets}\n    />\n  );\n};\n\nexport default SearchBoxTarget;\n","import React from \"react\";\nimport StaticFilterOptions from \"./StaticFilterOptions\";\n\nconst staticProjectTypes = [\n    \"Humanitarian Aid\",\n    \"Development\",\n    \"Peace\",\n];\n\nconst SearchBoxProjectTypes = ({ selectedProjectTypes, setselectedProjectTypes }) => {\n  return (\n    <StaticFilterOptions\n      title=\"Project Type\"\n      options={staticProjectTypes}\n      selectedOptions={selectedProjectTypes}\n      setSelectedOptions={setselectedProjectTypes}\n    />\n  );\n};\n\nexport default SearchBoxProjectTypes;\n","import React from \"react\";\nimport Mapfilter from \"./Mapfilter\";\nimport SearchBox from \"./SearchBox\";\nimport SearchBoxLocation from \"./SearchBoxLocation\";\nimport SearchBoxPartner from \"./SearchBoxPartner\";\nimport SearchBoxStatus from \"./SearchBoxStatus\";\nimport SearchBoxTopic from \"./SearchBoxTopic\";\nimport SearchBoxTarget from \"./SearchBoxTarget\";\nimport SearchBoxProjectTypes from \"./SearchBoxProjectType\";\nimport \"../styles/Search.css\";\n\nconst Search = ({\n  searchQuery,\n  setSearchQuery,\n  selectedPartner,\n  setSelectedPartner,\n  selectedLocations,\n  setSelectedLocations,\n  selectedStatus,\n  setSelectedStatus,\n  selectedTopics,\n  setSelectedTopics,\n  selectedTargets,\n  setSelectedTargets,\n  selectedProjectTypes,\n  setselectedProjectTypes\n}) => {\n  return (\n    <div className=\"search-container\">\n      <SearchBox\n        searchQuery={searchQuery}\n        setSearchQuery={setSearchQuery}\n      />\n      <SearchBoxLocation\n        selectedLocations={selectedLocations}\n        setSelectedLocations={setSelectedLocations}\n      />\n      <SearchBoxPartner\n        selectedPartner={selectedPartner}\n        setSelectedPartner={setSelectedPartner}\n      />\n      <SearchBoxStatus\n        selectedStatus={selectedStatus}\n        setSelectedStatus={setSelectedStatus}\n      />\n      <SearchBoxTopic\n        selectedTopics={selectedTopics}\n        setSelectedTopics={setSelectedTopics}\n      />\n      <SearchBoxTarget\n        selectedTargets={selectedTargets}\n        setSelectedTargets={setSelectedTargets}\n      />\n      <SearchBoxProjectTypes\n        selectedProjectTypes={selectedProjectTypes}\n        setselectedProjectTypes={setselectedProjectTypes}\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport locationIcon from \"../assets/location-dot-solid.svg\"\nimport picPlaceholder from \"../assets/picture-placeholder.png\"\nimport \"../styles/DataBlock.css\"\n\nconst DataBlock = ({ project, location, partners, detail, status }) => {\n    return (\n      <div className=\"data-block\">\n        <div className=\"picture-wrapper\">\n          <div className=\"status-indicator\" style={{ color: \"white\", backgroundColor: status === \"COMPLETED\" ? \"green\" : \"orange\" }}>\n            {status}\n          </div>\n          <img src={picPlaceholder} alt=\"placeHolder\"/>\n        </div>\n        <div className=\"content\">\n          <h2 className=\"project-name\">{project}</h2>\n          <div className=\"location\">\n            <img src={locationIcon} alt=\"Location\" />\n            <span>{location}</span>\n          </div>\n          <p className=\"partners\">Partners: {partners}</p>\n          <a className=\"details-link\" href={detail} target=\"_blank\" rel=\"noopener noreferrer\">\n            <div className=\"more-button\">More</div>\n          </a>\n        </div>\n      </div>\n    );\n  };\n\nexport default DataBlock;\n","import React, { useState } from \"react\";\nimport DataBlock from \"./DataBlock\";\nimport \"../styles/DataBlocksList.css\";\nimport \"../styles/CustomSwitch.css\"; // Make sure to import the custom switch styles\nimport { centroid } from '@turf/turf';\n\n\nconst DataBlocksList = ({ filteredDataBlock, countryData }) => {\n  const [viewMode, setViewMode] = useState(\"grid\"); // Add view mode state\n\n  const toggleViewMode = () => {\n    setViewMode(viewMode === \"grid\" ? \"list\" : \"grid\");\n  };\n\n  const exportToCSV = () => {\n    const header = Object.keys(filteredDataBlock[0]).join(\",\"); // Get the keys of the first entry as headers\n    const dataRows = filteredDataBlock.map(entry => Object.values(entry).join(\",\")); // Convert each entry to a CSV row\n  \n    const csvContent = `data:text/csv;charset=utf-8,${header}\\n${dataRows.join(\"\\n\")}`;\n  \n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"data.csv\");\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n// Initialize countryProjectArray as an empty array\nlet countryProjectArray = [];\n\nconst projectsPerCountry = filteredDataBlock.reduce((acc, entry) => {\n  const locations = entry.Location.split(';').map(location => location.trim());\n\n  locations.forEach(location => {\n    // Remove spaces from the location and convert it to lowercase\n    const modifiedLocation = location.replace(/\\s+/g, '');\n\n    if (!countryData) {\n      return; // Handle the case when countryData is null or undefined\n    }\n\n    // Loop through countryData to find a matching Country\n    countryData.features.forEach(countryFeature => {\n      const countryProperties = countryFeature.properties;\n      const countryName = countryProperties.Country;\n\n      if (modifiedLocation === countryName) {\n        if (!acc[modifiedLocation]) {\n          acc[modifiedLocation] = {\n            country: modifiedLocation,\n            countProjects: 0,\n            centroid: null,\n          };\n        }\n        acc[modifiedLocation].countProjects++;\n\n        // Calculate the centroid\n        const countryGeometry = countryFeature.geometry;\n        const countryCentroid = centroid(countryGeometry);\n\n        // Add centroid to the countryProjectArray\n        acc[modifiedLocation].centroid = countryCentroid;\n      }\n    });\n  });\n\n  return acc;\n}, {});\n\n// Convert the object into an array of objects with named properties\ncountryProjectArray = Object.values(projectsPerCountry).map(({ country, countProjects, centroid }) => ({\n  country: country.replace(/\\s+/g, ' '),\n  countProjects,\n  centroid,\n}));\nconsole.log(countryProjectArray);\n        \n  return (\n    <div className=\"data-blocks-list\">\n      <div className=\"view-mode-switch\">\n        <span>Grid</span>\n        <label className=\"switch\">\n          <input type=\"checkbox\" onChange={toggleViewMode} />\n          <span className=\"slider round\"></span>\n        </label>\n        <span>List</span>\n      </div>\n      <button className=\"export-button\" onClick={exportToCSV}>Export to CSV</button>\n      <div className={viewMode === \"grid\" ? \"data-blocks-grid\" : \"data-blocks-list\"}>\n        {filteredDataBlock.map((entry, index) => (\n          <DataBlock\n            key={index}\n            project={entry.Project}\n            location={entry.Location}\n            partners={entry.Partners}\n            detail={entry.Detail}\n            status={entry.Status}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DataBlocksList;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MapView from './components/MapView';\nimport Table from './components/Table';\nimport Timebar from './components/Timebar';\nimport Sidebar from './components/Sidebar';\nimport Draft from './components/Draft';\nimport Mapfilter from './components/Mapfilter';\nimport DraftRow from './components/DraftRow';\nimport Search from \"./components/Search\";\nimport DataBlocksList from \"./components/DataBlocksList\";\nimport data from \"./data/data.json\";\n\n\nexport default function App() {\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedStatus, setSelectedStatus] = useState([]);\n    const [selectedLocations, setSelectedLocations] = useState([]);\n    const [selectedPartner, setSelectedPartner] = useState([]);\n    const [selectedProjectTypes, setselectedProjectTypes] = useState([]);\n    const [selectedTargets, setSelectedTargets] = useState([]);\n    const [selectedTopics, setSelectedTopics] = useState([]);\n\n    const [countryData, setCountryData] = useState(null);\n    const [level1Data, setLevel1Data] = useState(null);\n    const [level2Data, setLevel2Data] = useState(null);//for diff layers\n    const [selectedYear, setSelectedYear] = useState(2023);\n    const [selectedMonth, setSelectedMonth] = useState(3);\n    const [hoveredRegion, setHoveredRegion] = useState(null);\n    const [filteredData, setFilteredData] = useState({\n      filteredCountryData: [],\n      filteredLevel1Data: [],\n      filteredLevel2Data: [],\n    });\n    const handleFilteredDataChange = (filteredData) => {\n      setFilteredData(filteredData);\n    };\n\n    const handleYearChange = (year) => {\n      setSelectedYear(year);\n    };\n    const handleMonthChange = (month) => {\n      setSelectedMonth(month);\n    };\n    \n    const handleRegionChange= (region) => { \n      setHoveredRegion(region);\n      \n    };\n    \n  \n\n    useEffect(() => { //la data de draft si cambia porque esta dentro de UseEffect\n        async function fetchData() {\n          try {\n            const responseCountry = await axios.get('/data/output_country.geojson');\n            setCountryData(responseCountry.data);\n    \n            const responseLevel1 = await axios.get('/data/output_level1.geojson');\n            setLevel1Data(responseLevel1.data);\n    \n            const responseLevel2 = await axios.get('/data/output_level2.geojson');\n            setLevel2Data(responseLevel2.data);\n              console.log(responseCountry,responseLevel1,responseLevel2,'response levels');\n\n          } catch (error) {\n            console.error('Error fetching data:', error);\n          }\n        }\n    \n        fetchData();\n      }, []);\n\n    const filteredDataBlock = data\n      .filter((entry) => {\n        if (selectedPartner.length === 0) {\n          return true;\n        }\n        const partnersArray = (entry.Partners || \"\").split(\";\").map(partner => partner.trim());\n        return selectedPartner.some((selectedPartner) => partnersArray.includes(selectedPartner));\n      })\n      .filter((entry) => {\n        if (selectedLocations.length === 0) {\n          return true;\n        }\n        const locationsArray = (entry.Location || \"\").split(\";\").map(location => location.trim());\n        return selectedLocations.some((selectedLocation) => locationsArray.includes(selectedLocation))\n      })\n      .filter((entry) => {\n        if (selectedStatus.length === 0) {\n          return true;\n        }\n        const statusArray = (entry.Status || \"\").split(\";\").map(status => status.trim());\n        return selectedStatus.some((selectedStatus) => statusArray.includes(selectedStatus))\n      })\n      .filter((entry) => {\n        if (selectedTopics.length === 0) {\n          return true;\n        }\n        const topicsArray = (entry.Topic || \"\").split(\";\").map(topic => topic.trim());\n        return selectedTopics.some((selectedTopic) => topicsArray.includes(selectedTopic))\n      })\n      .filter((entry) => {\n        if (selectedTargets.length === 0) {\n          return true;\n        }\n        const targetsArray = (entry.Target || \"\").split(\";\").map(target => target.trim());\n        return selectedTargets.some((selectedTarget) => targetsArray.includes(selectedTarget))\n      })\n      .filter((entry) => {\n        if (selectedProjectTypes.length === 0) {\n          return true;\n        }\n        const projectTypesArray = (entry.ProjectType || \"\").split(\";\").map(projectType => projectType.trim());\n        return selectedProjectTypes.some((selectedProjectTypes) => projectTypesArray.includes(selectedProjectTypes));\n      })\n      .filter((entry) => {\n        if (!searchQuery) {\n          return true;\n        }\n        return entry.Project.toLowerCase().includes(searchQuery.toLowerCase());\n      });\n  \n\n  return (\n    <div>\n      <MapView regionInfo={hoveredRegion} onChangeYear={handleYearChange} onChangeRegion={handleRegionChange} selectedYear={selectedYear} onChangeMonth={handleMonthChange} selectedMonth={selectedMonth}/>      \n      <Timebar onChangeYear={handleYearChange} selectedYear={selectedYear} onChangeMonth={handleMonthChange} selectedMonth={selectedMonth} />\n      <Sidebar countryData={countryData} level1Data={level1Data} level2Data={level2Data} regionInfo={hoveredRegion} onChangeYear={handleYearChange} selectedYear={selectedYear} onChangeMonth={handleMonthChange} selectedMonth={selectedMonth} /> \n      <Search\n        searchQuery={searchQuery}\n        setSearchQuery={setSearchQuery}\n        selectedPartner={selectedPartner}\n        setSelectedPartner={setSelectedPartner}\n        selectedLocations={selectedLocations}\n        setSelectedLocations={setSelectedLocations}\n        selectedStatus={selectedStatus}\n        setSelectedStatus={setSelectedStatus}\n        selectedTopics={selectedTopics}\n        setSelectedTopics={setSelectedTopics}\n        selectedTargets={selectedTargets}\n        setSelectedTargets={setSelectedTargets}\n        selectedProjectTypes={selectedProjectTypes}\n        setselectedProjectTypes={setselectedProjectTypes}\n      />\n      <DataBlocksList filteredDataBlock={filteredDataBlock} countryData={countryData} />\n\n    </div>\n\n\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}