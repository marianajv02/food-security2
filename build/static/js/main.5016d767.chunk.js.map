{"version":3,"sources":["assets/location-dot-solid.svg","assets/picture-placeholder.png","components/Legend.js","components/Sidebar.js","components/Coordinates.js","components/MapView.js","components/Timebar.js","components/StaticFilterOptions.js","components/SearchBox.js","components/SearchBoxLocation.js","components/SearchBoxPartner.js","components/SearchBoxStatus.js","components/SearchBoxTopic.js","components/SearchBoxTarget.js","components/SearchBoxProjectType.js","components/Search.js","components/DataBlock.js","components/DataBlocksList.js","App.js","index.js"],"names":["module","exports","Legend","colors","React","createElement","className","map","layer","i","key","style","backgroundColor","src","process","alt","width","height","formatNumber","number","toLocaleString","maximumFractionDigits","calculatePercentage","value","total","toFixed","Sidebar","_ref","countryData","level1Data","level2Data","regionInfo","selectedYear","selectedMonth","appendedData","setAppendedData","useState","useEffect","mergedData","features","clickedKey","foundRow","find","feature","properties","Key","Name","Population","concat","Phase1","Percent1","parseFloat","Phase2","Percent2","Phase3","Percent3","Phase4","Percent4","Phase5","Percent5","countryCoordinates","country","coordinates","mapboxgl","accessToken","MapView","onChangeRegion","countryProjectArray","protocoleData","console","log","mapContainer","useRef","lng","setLng","lat","setLat","zoom","setZoom","hoveredRegion","setHoveredRegion","project","matchingCoordinate","_ref2","type","countryName","countProjects","geometry","layerNames","current","length","existingSource","getSource","setData","setLayoutProperty","addLayer","id","minzoom","maxzoom","paint","source","layout","addSource","data","cluster","clusterMaxZoom","clusterRadius","handleMove","getCenter","getZoom","createLayerClickHandler","e","lngLat","newHoveredRegion","name","currentZoom","maxZoom","targetZoom","easeTo","center","duration","curve","popup","remove","Popup","maxWidth","maxHeight","setLngLat","setHTML","Name_2","addTo","setTimeout","forEach","layerName","getLayer","setPaintProperty","yearValue","parseInt","monthValue","some","getMapboxExpression","separateLayerName","propertyName","getStripesExpression","Map","container","minZoom","cooperativeGestures","sources","url","on","addControl","NavigationControl","isMounted","ref","Timebar","onChangeYear","onChangeMonth","setSelectedYear","setSelectedMonth","handleMonthButtonClick","month","monthNumber","March","June","November","undefined","min","max","step","onChange","event","sliderValue","target","selected","Math","round","maxYear","onClick","StaticFilterOptions","title","options","selectedOptions","setSelectedOptions","showDropdown","setShowDropdown","searchText","setSearchText","dropdownRef","handleDocumentClick","contains","document","addEventListener","removeEventListener","filteredOptions","filter","option","toLowerCase","includes","placeholder","checked","handleSelectAll","htmlFor","selectedOption","handleOptionToggle","SearchBox","searchQuery","setSearchQuery","Countries","SearchBoxLocation","selectedLocations","setSelectedLocations","staticPartner","SearchBoxPartner","selectedPartner","setSelectedPartner","StatusOptions","SearchBoxStatus","selectedStatus","setSelectedStatus","TopicOptions","SearchBoxTopic","selectedTopics","setSelectedTopics","TargetOptions","SearchBoxTarget","selectedTargets","setSelectedTargets","staticProjectTypes","SearchBoxProjectTypes","selectedProjectTypes","setselectedProjectTypes","Search","DataBlock","location","partners","detail","status","color","picPlaceholder","locationIcon","href","rel","DataBlocksList","filteredDataBlock","viewMode","setViewMode","toggleViewMode","exportToCSV","header","Object","keys","join","dataRows","entry","values","csvContent","encodedUri","encodeURI","link","setAttribute","body","appendChild","click","removeChild","index","Project","Location","Partners","Detail","Status","App","setCountryData","setLevel1Data","setLevel2Data","setProtocoleData","filteredData","setFilteredData","filteredCountryData","filteredLevel1Data","filteredLevel2Data","handleYearChange","year","handleMonthChange","async","responseCountry","axios","get","responseLevel1","responseLevel2","responseProtocole","error","fetchData","partnersArray","split","partner","trim","locationsArray","selectedLocation","statusArray","topicsArray","Topic","topic","selectedTopic","targetsArray","Target","selectedTarget","projectTypesArray","ProjectType","projectType","projectsPerCountry","reduce","acc","modifiedLocation","replace","countryFeature","Country","centroid","countryCentroid","region","handleClearAllFilters","ReactDOM","render","StrictMode","getElementById"],"mappings":"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,SACNgB,OAAQ,kBACRD,MAAO,CACL,eAAgB,CACd,cACA,CAAC,cAAe,GAChB,CAAC,MAAO,iBACR,EACA,qBACA,GACA,qBACA,GACA,qBACA,GACA,qBACA,GACA,qBACA,GACA,qBACA,IACA,sBAEF,sBAAuB,CACrB,cACA,CACE,cACA,GAEF,CACE,MACA,iBAEF,EACA,qBACA,GACA,qBACA,GACA,qBACA,GACA,qBACA,GACA,qBACA,GACA,qBACA,IACA,sBAEF,sBAAuB,IACvB,gBAAiB,CACf,cACA,CAAC,UACD,CAAC,QACD,EACA,CACE,IACA,CACE,cACA,CAAC,cAAe,GAChB,CACE,MACA,iBAEF,EACA,EACA,GACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,IAEF,KAEF,EACA,CACE,IACA,CACE,cACA,CAAC,cAAe,GAChB,CACE,MACA,iBAEF,EACA,EACA,GACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,IAEF,oBAEF,GACA,CACE,IACA,CACE,cACA,CAAC,cAAe,GAChB,CACE,MACA,iBAEF,EACA,EACA,GACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,IAEF,MAEF,GACA,CACE,IACA,CACE,cACA,CAAC,cAAe,GAChB,CACE,MACA,iBAEF,EACA,EACA,GACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,IAEF,SAKR5F,EAAIkF,QAAQM,SAAS,CACnBC,GAAI,yBACJZ,KAAM,SACNgB,OAAQ,kBACRC,OAAQ,CACN,aAAc,CAAC,YAAa,CAAC,MAAO,kBACpC,YAAa,CAAC,iBAAkB,yBAChC,YAAa,SAKpB,CAAC9D,IAEJ,MAAMoE,EAAaA,KACjBjC,EAAOnE,EAAIkF,QAAQmB,YAAYnC,IAAIhD,QAAQ,IAC3CmD,EAAOrE,EAAIkF,QAAQmB,YAAYjC,IAAIlD,QAAQ,IAC3CqD,EAAQvE,EAAIkF,QAAQoB,UAAUpF,QAAQ,KAGlCqF,EAA2BC,IAE/B,MAAMpE,EAAUoE,EAA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","file":"static/js/main.5016d767.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/location-dot-solid.835ddace.svg\";","module.exports = __webpack_public_path__ + \"static/media/picture-placeholder.ae02891c.png\";","import React from 'react';\r\nimport './Legend.css';\r\n\r\nfunction Legend() {\r\n    const layers = ['Phase 1', 'Phase 2', 'Phase 3', 'Phase 4', 'Phase 5', 'No data'];\r\n    const colors = ['#53ca57', '#ffe252', '#fa890f', '#eb3333', '#900101e3', '#ffffff'];\r\n\r\n    return (\r\n        <nav className='legend'>\r\n            <div className='legend-container'>\r\n                {layers.map((layer, i) => (\r\n                    <div key={i} className='legend-item'>\r\n                        <span className='legend-key' style={{ backgroundColor: colors[i] }} />\r\n                        <span className='legend-value'>{layer}</span>\r\n                    </div>\r\n                ))}\r\n    \r\n            \r\n                <div className='legend-item'>\r\n                    <img\r\n                        className='legend-image' \r\n                        src={process.env.PUBLIC_URL + '/images/stripes2.jpg'}\r\n                        alt='stripes'\r\n                        width=\"20\" \r\n                        height=\"20\" \r\n                    />\r\n                    <span className='legend-value'>Inaccessible Protocole</span>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n    \r\n}\r\n\r\nexport default Legend;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Sidebar.css';\r\nimport App from '../App';\r\n\r\nfunction Sidebar({ countryData, level1Data, level2Data, regionInfo, selectedYear, selectedMonth }) { //REGIONINFO TRAE EL KEY\r\n  const [appendedData, setAppendedData] = useState([]);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    if (countryData && level1Data && level2Data){\r\n        const mergedData = [ ...countryData.features, ...level1Data.features, ...level2Data.features ];\r\n        setAppendedData(mergedData);\r\n    };\r\n    \r\n  }, [regionInfo]);\r\n\r\n\r\n  if (!regionInfo) {\r\n    return null;\r\n  }\r\n\r\n  const clickedKey = regionInfo.key;\r\n\r\n  \r\n  let foundRow = null;\r\n  if (appendedData) {\r\n    foundRow = appendedData.find((feature) => feature.properties.Key === clickedKey);\r\n\r\n  }\r\n\r\n  const properties = foundRow ? foundRow.properties : {};\r\n\r\n  const Name= properties['Name_2'];\r\n  const Population = formatNumber(properties[`POP-${selectedYear}-0${selectedMonth}`]);\r\n  const Phase1 = formatNumber(properties[`PH1-${selectedYear}-0${selectedMonth}`]);\r\n  const Percent1 = calculatePercentage(\r\n    parseFloat(properties[`PH1-${selectedYear}-0${selectedMonth}`]),\r\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\r\n  );\r\n\r\n  const Phase2 = formatNumber(properties[`PH2-${selectedYear}-0${selectedMonth}`]);\r\n  const Percent2 = calculatePercentage(\r\n    parseFloat(properties[`PH2-${selectedYear}-0${selectedMonth}`]),\r\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\r\n  );\r\n  const Phase3 = formatNumber(properties[`PH3-${selectedYear}-0${selectedMonth}`]);\r\n  const Percent3 = calculatePercentage(\r\n    parseFloat(properties[`PH3-${selectedYear}-0${selectedMonth}`]),\r\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\r\n  );\r\n  const Phase4 = formatNumber(properties[`PH4-${selectedYear}-0${selectedMonth}`]);\r\n  const Percent4 = calculatePercentage(\r\n    parseFloat(properties[`PH4-${selectedYear}-0${selectedMonth}`]),\r\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\r\n  );\r\n  const Phase5 = formatNumber(properties[`PH5-${selectedYear}-0${selectedMonth}`]);\r\n  const Percent5 = calculatePercentage(\r\n    parseFloat(properties[`PH5-${selectedYear}-0${selectedMonth}`]),\r\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\r\n  );\r\n\r\n  return (\r\n    <nav className='sidebar'>\r\n      <div className='sidebar-container'>\r\n        <div className='logo'>\r\n        <img src={process.env.PUBLIC_URL + '/images/family_icon.jpg'} alt='Family Icon' />\r\n          <span className='logo-text'>Food and nutrition situation {selectedYear} </span> {/* adding selected month as trial*/}\r\n        </div>\r\n\r\n        <div className='region-info'>\r\n          {/* Display information about the hovered region */}\r\n          <h2>\r\n            <div>\r\n              <p>\r\n              {Name}\r\n              </p>\r\n            </div>\r\n          </h2>\r\n\r\n          <div className='info-row'>\r\n            <h4>Total population:</h4>\r\n            <p>{Population}</p>\r\n          </div>\r\n\r\n          <div className='info-row'>\r\n            <h4>Phase 1:</h4>\r\n            <p>{Phase1}</p>\r\n            <p>{Percent1}%</p>\r\n          </div>\r\n          <div className='info-row'>\r\n            <h4>Phase 2:</h4>\r\n            <p>{Phase2}</p>\r\n            <p>{Percent2}%</p>\r\n          </div>\r\n          <div className='info-row'>\r\n            <h4>Phase 3:</h4>\r\n            <p>{Phase3}</p>\r\n            <p>{Percent3}%</p>\r\n          </div>\r\n          <div className='info-row'>\r\n            <h4>Phase 4:</h4>\r\n            <p>{Phase4}</p>\r\n            <p>{Percent4}%</p>\r\n          </div>\r\n          <div className='info-row'>\r\n            <h4>Phase 5:</h4>\r\n            <p>{Phase5}</p>\r\n            <p>{Percent5}%</p>\r\n          </div>\r\n          {/* Add more fields as needed */}\r\n        </div>\r\n        {/* More sidebar content */}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction formatNumber(number) {\r\n  return number ? number.toLocaleString('en-US', { maximumFractionDigits: 0 }) : '';\r\n}\r\n\r\nfunction calculatePercentage(value, total) {\r\n  const percentage = total ? ((value || 0) / total) * 100 : 0;\r\n  return percentage.toFixed(2); // Displaying percentage with two decimal places\r\n}\r\n\r\nexport default Sidebar;\r\n","export const countryCoordinates = [\r\n    { country: \"Benin\", coordinates: [2.4, 10.2] },\r\n    { country: \"BurkinaFaso\", coordinates: [-1.5, 12.2] },\r\n    { country: \"CaboVerde\", coordinates: [-24.0, 16.0] },\r\n    { country: \"Chad\", coordinates: [18.6, 15.3] },\r\n    { country: \"Côted'Ivoire\", coordinates: [-5.4, 7.8] },\r\n    { country: \"Gambia\", coordinates: [-15.9, 13.4] },\r\n    { country: \"Ghana\", coordinates: [-1.2, 6.9] },\r\n    { country: \"Guinea\", coordinates: [-11.05, 10.7] },\r\n    { country: \"Guinea-Bissau\", coordinates: [-15.0, 12.0] },\r\n    { country: \"Liberia\", coordinates: [-9.4, 6.4] },\r\n    { country: \"Mali\", coordinates: [-1.1, 17.3] },\r\n    { country: \"Mauritania\", coordinates: [-10.6, 19.8] },\r\n    { country: \"Niger\", coordinates: [9.4, 17.4] },\r\n    { country: \"Nigeria\", coordinates: [8.2, 9.5] },\r\n    { country: \"Senegal\", coordinates: [-14.7, 15.1] },\r\n    { country: \"SierraLeone\", coordinates: [-11.8, 8.5] },\r\n    { country: \"Togo\", coordinates: [1.05, 8.7] },\r\n    // Add coordinates for other countries here\r\n  ];\r\n  ","import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport Legend from './Legend';\r\nimport App from '../App';\r\nimport './MapView.css';\r\nimport Sidebar from './Sidebar';\r\nimport { countryCoordinates } from './Coordinates'\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFyaWFuYWp2LSIsImEiOiJjbGs3eXJmbzEwYXR3M2RxbnRuOHVkaHV3In0.rVa0wb_O5OTeuk07J90w5A';\r\n\r\nfunction MapView({ selectedYear, selectedMonth, onChangeRegion, countryProjectArray, countryData, protocoleData }) {\r\n  console.log(countryData, 'mapview comp');\r\n  const mapContainer = useRef(null);\r\n  const map = useRef(null);\r\n  const [lng, setLng] = useState(0);\r\n  const [lat, setLat] = useState(17);\r\n  const [zoom, setZoom] = useState(3.4);\r\n  const [hoveredRegion, setHoveredRegion] = useState(null);\r\n  const features = countryProjectArray.map((project) => {\r\n    const matchingCoordinate = countryCoordinates.find(({ country }) => country === project.country);\r\n  \r\n    return {\r\n      type: 'Feature',\r\n      properties: {\r\n        countryName: project.country,\r\n        countProjects: project.countProjects\r\n      },\r\n      geometry: {\r\n        type: 'Point',\r\n        coordinates: matchingCoordinate.coordinates\r\n      }\r\n    };\r\n  });\r\n  console.log('features', features);\r\n\r\n  const layerNames = ['output_country-2uwmmy', 'output_level1-5iewsu', 'output_level2-8nur76'];\r\n\r\n  const addBoundaryToMap = () => {\r\n    const countryBoundary = {\r\n      id: 'output_country-2uwmmw',\r\n      minzoom: 0,\r\n      maxzoom: 22,\r\n      type: 'line',\r\n      paint: {\r\n        'line-opacity': 1,\r\n        'line-width': 2.5,\r\n        \"line-color\": \"#045226\"  \r\n      },\r\n      source: 'composite',\r\n      'source-layer': 'output_country-2uwmmy',\r\n      layout: {\r\n        'line-cap': 'round',\r\n        'line-join': 'round'\r\n      }\r\n    };\r\n\r\n    // Add the custom layer to the map\r\n    map.current.addLayer(countryBoundary);\r\n  };\r\n\r\n  const initializeMap = () => {\r\n    console.log('Initializing map...');\r\n    map.current = new mapboxgl.Map({\r\n      container: mapContainer.current,\r\n      style: 'mapbox://styles/marianajv-/cllf4b5be012q01pb6nqq4k5x',\r\n      center: [lng, lat],\r\n      zoom: zoom,\r\n      minZoom: 2.6,\r\n      cooperativeGestures: true,\r\n      sources: {\r\n        // ... other sources ...\r\n        'stripes': {\r\n          type: 'image',\r\n          url: '/images/stripes2.jpg', // Path to your local image file\r\n          coordinates: [\r\n            [0, 0],\r\n            [1, 0],\r\n            [1, 1],\r\n            [0, 1]\r\n          ]\r\n        },\r\n      }\r\n    });\r\n    map.current.on('move', handleMove);\r\n\r\n    layerNames.forEach(layerName => {\r\n      map.current.on('click', layerName, createLayerClickHandler);\r\n    });\r\n    map.current.addControl(\r\n      new mapboxgl.NavigationControl()\r\n    );\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (map.current && features && features.length > 0) {\r\n        const existingSource = map.current.getSource('projectClusters');\r\n        if (existingSource) {\r\n          console.log('Updating existing source data...');\r\n          // Source already exists, update its data\r\n          existingSource.setData({\r\n            type: 'FeatureCollection',\r\n            features: features\r\n          });\r\n          // Update text label field property\r\n          map.current.setLayoutProperty('projectClusters-labels', 'text-field', [\r\n            'to-string',\r\n            ['get', 'countProjects']\r\n          ]);\r\n          console.log('Source data updated:', 'projectClusters');\r\n          \r\n        } else {\r\n          console.log('Adding new source...');\r\n          // Source doesn't exist, add it\r\n          addBoundaryToMap();\r\n          map.current.addSource('projectClusters', {\r\n            type: 'geojson',\r\n            data: {\r\n              type: 'FeatureCollection',\r\n              features: features\r\n            },\r\n            cluster: true,\r\n            clusterMaxZoom: 14,\r\n            clusterRadius: 10\r\n          });\r\n          console.log('Source added:', 'projectClusters');\r\n          map.current.addLayer({\r\n          id: 'projectClusters-circles',\r\n          type: 'circle',\r\n          source: 'projectClusters',\r\n          paint: {\r\n            'circle-color': [\r\n              \"interpolate\",\r\n              [\"exponential\", 1],\r\n              [\"get\", \"countProjects\"],\r\n              0,\r\n              \"hsl(295, 78%, 73%)\",\r\n              10,\r\n              \"hsl(284, 79%, 71%)\",\r\n              20,\r\n              \"hsl(274, 82%, 70%)\",\r\n              40,\r\n              \"hsl(266, 83%, 68%)\",\r\n              60,\r\n              \"hsl(257, 84%, 66%)\",\r\n              80,\r\n              \"hsl(248, 85%, 64%)\",\r\n              100,\r\n              \"hsl(235, 86%, 60%)\"\r\n            ],\r\n            \"circle-stroke-color\": [\r\n              \"interpolate\",\r\n              [\r\n                \"exponential\",\r\n                1\r\n              ],\r\n              [\r\n                \"get\",\r\n                \"countProjects\"\r\n              ],\r\n              0,\r\n              \"hsl(295, 78%, 51%)\",\r\n              10,\r\n              \"hsl(284, 79%, 50%)\",\r\n              20,\r\n              \"hsl(274, 82%, 49%)\",\r\n              40,\r\n              \"hsl(266, 83%, 48%)\",\r\n              60,\r\n              \"hsl(257, 84%, 46%)\",\r\n              80,\r\n              \"hsl(248, 85%, 45%)\",\r\n              100,\r\n              \"hsl(235, 86%, 42%)\"\r\n            ],\r\n            \"circle-stroke-width\": 0.75,\r\n            'circle-radius': [\r\n              \"interpolate\",\r\n              [\"linear\"],\r\n              [\"zoom\"],\r\n              0,\r\n              [\r\n                \"*\",\r\n                [\r\n                  \"interpolate\",\r\n                  [\"exponential\", 1],\r\n                  [\r\n                    \"get\",\r\n                    \"countProjects\"\r\n                  ],\r\n                  0,\r\n                  3,\r\n                  10,\r\n                  6,\r\n                  20,\r\n                  9,\r\n                  40,\r\n                  12,\r\n                  60,\r\n                  15,\r\n                  80,\r\n                  18,\r\n                  100,\r\n                  21\r\n                ],\r\n                2.7\r\n              ],\r\n              5,\r\n              [\r\n                \"*\",\r\n                [\r\n                  \"interpolate\",\r\n                  [\"exponential\", 1],\r\n                  [\r\n                    \"get\",\r\n                    \"countProjects\"\r\n                  ],\r\n                  0,\r\n                  3,\r\n                  10,\r\n                  6,\r\n                  20,\r\n                  9,\r\n                  40,\r\n                  12,\r\n                  60,\r\n                  15,\r\n                  80,\r\n                  18,\r\n                  100,\r\n                  21\r\n                ],\r\n                2.9700000000000006\r\n              ],\r\n              10,\r\n              [\r\n                \"*\",\r\n                [\r\n                  \"interpolate\",\r\n                  [\"exponential\", 1],\r\n                  [\r\n                    \"get\",\r\n                    \"countProjects\"\r\n                  ],\r\n                  0,\r\n                  3,\r\n                  10,\r\n                  6,\r\n                  20,\r\n                  9,\r\n                  40,\r\n                  12,\r\n                  60,\r\n                  15,\r\n                  80,\r\n                  18,\r\n                  100,\r\n                  21\r\n                ],\r\n                3.78\r\n              ],\r\n              22,\r\n              [\r\n                \"*\",\r\n                [\r\n                  \"interpolate\",\r\n                  [\"exponential\", 1],\r\n                  [\r\n                    \"get\",\r\n                    \"countProjects\"\r\n                  ],\r\n                  0,\r\n                  3,\r\n                  10,\r\n                  6,\r\n                  20,\r\n                  9,\r\n                  40,\r\n                  12,\r\n                  60,\r\n                  15,\r\n                  80,\r\n                  18,\r\n                  100,\r\n                  21\r\n                ],\r\n                5.4\r\n              ]\r\n            ]\r\n          }\r\n        });\r\n        map.current.addLayer({\r\n          id: 'projectClusters-labels',\r\n          type: 'symbol',\r\n          source: 'projectClusters',\r\n          layout: {\r\n            'text-field': ['to-string', ['get', 'countProjects']],\r\n            'text-font': ['Open Sans Bold', 'Arial Unicode MS Bold'],\r\n            'text-size': 12,\r\n                  }\r\n        });\r\n      }\r\n    }\r\n  }, [features]);    \r\n\r\n  const handleMove = () => {\r\n    setLng(map.current.getCenter().lng.toFixed(4));\r\n    setLat(map.current.getCenter().lat.toFixed(4));\r\n    setZoom(map.current.getZoom().toFixed(2));\r\n  };\r\n\r\n  const createLayerClickHandler = (e) => {\r\n      \r\n    const feature = e.features[0];\r\n    const lngLat = e.lngLat;\r\n\r\n    const newHoveredRegion = {\r\n      name: feature.properties['Name_2'],\r\n      key: feature.properties['Key']\r\n    };\r\n\r\n    const currentZoom = map.current.getZoom();\r\n    let maxZoom;\r\n    if (currentZoom < 4.99) {\r\n      maxZoom = 4.99;\r\n    } else if (currentZoom > 4.99) {\r\n      maxZoom = 6.7;\r\n    }\r\n    const targetZoom = currentZoom + 0.5 <= maxZoom ? currentZoom + 1 : maxZoom;\r\n    map.current.easeTo({\r\n      center: [lngLat.lng.toFixed(4), lngLat.lat.toFixed(4)],\r\n      zoom: targetZoom,\r\n      duration: 1000,\r\n      curve: 1\r\n    });\r\n\r\n    let popup = null;\r\n\r\n    if (popup) {\r\n      popup.remove();\r\n    }\r\n\r\n    popup = new mapboxgl.Popup({\r\n      maxWidth: '100px',\r\n      maxHeight: '50px',\r\n      className: 'custom-popup'\r\n    })\r\n      .setLngLat(lngLat)\r\n      .setHTML(`<h5>${feature.properties.Name_2}</h5>`)\r\n      .addTo(map.current);\r\n\r\n    onChangeRegion(newHoveredRegion);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    setTimeout(() => {console.log(\"Waiting data for 60 milliseconds.\")}, 60);\r\n\r\n  if (!map.current) {\r\n    initializeMap();\r\n  } else {\r\n\r\n    layerNames.forEach(layerName => {\r\n      const existingLayer = map.current.getLayer(layerName);\r\n      if (existingLayer) {\r\n        map.current.setPaintProperty(\r\n           layerName,\r\n          'fill-color',\r\n          getMapboxExpression(selectedYear, selectedMonth, countryData)\r\n          \r\n        );\r\n      }\r\n    });\r\n\r\n    const separateLayerName = \"output-protocol-7nndf6\";\r\n    const existingSeparateLayer = map.current.getLayer(separateLayerName);\r\n    \r\n    if (existingSeparateLayer) {\r\n      map.current.setPaintProperty(\r\n        separateLayerName,\r\n        'fill-pattern',\r\n        getStripesExpression(selectedYear, selectedMonth, protocoleData)\r\n      );\r\n    }\r\n  \r\n}\r\n\r\n  }, [selectedYear, selectedMonth]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    if (map.current) {\r\n      map.current.on('move', handleMove);\r\n    }\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [lat, lng, zoom]);\r\n\r\n    return (\r\n      <div className='view-container'>\r\n        \r\n        <div ref={mapContainer} className=\"map-container\" />\r\n\r\n        <Legend/>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n\r\n  function getMapboxExpression(selectedYear, selectedMonth, countryData) {\r\n    const yearValue = parseInt(selectedYear);\r\n    const monthValue = parseInt(selectedMonth);\r\n    const propertyExists = countryData.features.some((feature) => {\r\n      const propertyName = `CLAS-${yearValue}-0${monthValue}`;\r\n      return propertyName in feature.properties;\r\n    });\r\n    \r\n    if (propertyExists) {\r\n      return [\r\n        'case',\r\n        ['==', ['number', ['get', `CLAS-${yearValue}-0${monthValue}`]], 1], '#53ca57',\r\n        ['==', ['number', ['get', `CLAS-${yearValue}-0${monthValue}`]], 2], '#ffe252',\r\n        ['==', ['number', ['get', `CLAS-${yearValue}-0${monthValue}`]], 3], '#fa890f',\r\n        ['==', ['number', ['get', `CLAS-${yearValue}-0${monthValue}`]], 4], '#eb3333',\r\n        '#ffffff'\r\n      ]\r\n    } else {\r\n      return '#ffffff';\r\n\r\n    };\r\n  }\r\n\r\n  function getStripesExpression(selectedYear, selectedMonth, protocoleData) {\r\n    \r\n    const yearValue = parseInt(selectedYear);\r\n    const monthValue = parseInt(selectedMonth);\r\n    const propertyExists = protocoleData.features.some((feature) => {\r\n      const propertyName = `PROT-${yearValue}-0${monthValue}`;\r\n      console.log(propertyName);\r\n      return propertyName in feature.properties;\r\n      \r\n    });\r\n      \r\n    if (propertyExists) {\r\n      return [\r\n        'case',\r\n        ['==', ['number', ['get', `PROT-${yearValue}-0${monthValue}`]], 1],'stripes',\r\n        'transparent' \r\n      ];\r\n    } else {\r\n      return 'transparent'; \r\n    \r\n  }\r\n}\r\n\r\nexport default MapView;","\r\nimport React, { useState } from 'react';\r\nimport './Timebar.css';\r\nimport MapView from './MapView';\r\n\r\n\r\nconst Timebar = ({ onChangeYear, onChangeMonth }) => {\r\n  const minYear = 2014;\r\n  const maxYear = 2023;\r\n  const [selectedYear, setSelectedYear] = useState(maxYear);\r\n  const [selectedMonth, setSelectedMonth] = useState(null);\r\n\r\n  const handleSliderChange = (event) => {\r\n    const yearRange = maxYear - minYear;\r\n    const sliderValue = parseFloat(event.target.value);\r\n    const selected = Math.round(minYear + sliderValue * yearRange);\r\n    setSelectedYear(selected);\r\n    if (onChangeYear) {\r\n      onChangeYear(selected);\r\n    }\r\n  };\r\n\r\n  const handleMonthButtonClick = (month) => {\r\n    const monthMap = {\r\n      March: 3,\r\n      June: 6,\r\n      November: 11,\r\n    };\r\n\r\n    const monthNumber = monthMap[month];\r\n    if (monthNumber !== undefined) {\r\n      setSelectedMonth(monthNumber);\r\n      if (onChangeMonth) {\r\n        onChangeMonth(monthNumber);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    \r\n    <div className=\"timebar\">\r\n      <div className=\"year-bar\">\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          step=\"0.01\"\r\n          value={(selectedYear - minYear) / (maxYear - minYear)}\r\n          onChange={handleSliderChange}\r\n          className=\"slider\"\r\n        />\r\n        <div className=\"year-indicator\">{selectedYear}</div>\r\n      </div>\r\n      <div className=\"month-buttons\">\r\n        <button\r\n          className={selectedMonth === 3 ? 'selected' : ''}\r\n          onClick={() => handleMonthButtonClick('March')}\r\n        >\r\n          March\r\n        </button>\r\n        <button\r\n          className={selectedMonth === 6 ? 'selected' : ''}\r\n          onClick={() => handleMonthButtonClick('June')}\r\n        >\r\n          June\r\n        </button>\r\n        <button\r\n          className={selectedMonth === 11 ? 'selected' : ''}\r\n          onClick={() => handleMonthButtonClick('November')}\r\n        >\r\n          November\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timebar;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./StaticFilterOptions.css\";\r\n\r\nconst StaticFilterOptions = ({ title, options, selectedOptions, setSelectedOptions }) => {\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const dropdownRef = useRef(null);\r\n\r\n  const handleDocumentClick = (event) => {\r\n    if (!dropdownRef.current.contains(event.target)) {\r\n      setShowDropdown(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleDocumentClick);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleDocumentClick);\r\n    };\r\n  }, []);\r\n\r\n  const handleSelectAll = () => {\r\n    if (selectedOptions.length === options.length) {\r\n      setSelectedOptions([]);\r\n    } else {\r\n      setSelectedOptions(options);\r\n    }\r\n  };\r\n\r\n  const handleOptionToggle = (option) => {\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchText(e.target.value);\r\n  };\r\n\r\n  const filteredOptions = options\r\n    .filter(option => option != null)\r\n    .filter((option) => option.toLowerCase().includes(searchText.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"filter-container\">\r\n      <label>{title}:</label>\r\n      <div className=\"search-dropdown\" ref={dropdownRef}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder={`Search by ${title}`}\r\n          value={searchText}\r\n          onChange={handleSearchChange}\r\n          onClick={() => setShowDropdown(true)}\r\n        />\r\n        {showDropdown && (\r\n          <div className=\"checkbox-list\">\r\n            <div>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={`selectAll${title}`}\r\n                value={`selectAll${title}`}\r\n                checked={selectedOptions.length === options.length}\r\n                onChange={handleSelectAll}\r\n              />\r\n              <label htmlFor={`selectAll${title}`}>Select All</label>\r\n            </div>\r\n            {filteredOptions.map((option) => (\r\n              <div key={option}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={option}\r\n                  value={option}\r\n                  checked={selectedOptions.includes(option)}\r\n                  onChange={() => handleOptionToggle(option)}\r\n                />\r\n                <label htmlFor={option}>\r\n                  <span>{option}</span>\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStaticFilterOptions.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedOptions: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  setSelectedOptions: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default StaticFilterOptions;","import React from \"react\";\r\nimport \"../styles/SearchBox.css\";\r\n\r\nconst SearchBox = ({ searchQuery, setSearchQuery }) => {\r\n  return (\r\n    <div className=\"filter-container\">\r\n      <label>Project Name:</label>\r\n      <div className=\"search-dropdown\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by Project Name\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport StaticFilterOptions from \"./StaticFilterOptions\";\r\n\r\nconst Countries = [\r\n  \"Benin\",\r\n  \"Burkina Faso\",\r\n  \"Cabo Verde\",\r\n  \"Cameroon\",\r\n  \"Chad\",\r\n  \"Côte d'Ivoire\",\r\n  \"Gambia\",\r\n  \"Ghana\",\r\n  \"Guinea\",\r\n  \"Guinea-Bissau\",\r\n  \"Liberia\",\r\n  \"Mali\",\r\n  \"Mauritania\",\r\n  \"Niger\",\r\n  \"Nigeria\",\r\n  \"Senegal\",\r\n  \"Sierra Leone\",\r\n  \"Togo\"\r\n  // ... other country options\r\n];\r\n\r\nconst SearchBoxLocation = ({ selectedLocations, setSelectedLocations }) => {\r\n  return (\r\n    <StaticFilterOptions\r\n      title=\"Location\"\r\n      options={Countries}\r\n      selectedOptions={selectedLocations}\r\n      setSelectedOptions={setSelectedLocations}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBoxLocation;\r\n","import React from \"react\";\r\nimport StaticFilterOptions from \"./StaticFilterOptions\";\r\n\r\nconst staticPartner = [\r\n    \"AfDB\",\r\n    \"Austria - OEZA\",\r\n    \"Belgium - Enable\",\r\n    \"BID\",\r\n    \"Canada - Global Affairs\",\r\n    \"Danemark – DANIDA\",\r\n    \"FCDO\",\r\n    \"Espagne – AECID\",\r\n    \"EU\",\r\n    \"Fonds africain de développement\",\r\n    \"France\",\r\n    \"Germany - BMZ\",\r\n    \"HCR\",\r\n    \"Italy\",\r\n    \"Luxembourg\",\r\n    \"Netherlands (The) - MINBUZA\",\r\n    \"OEZA\",\r\n    \"SNV\",\r\n    \"Switzerland - SDC\",\r\n    \"The World Bank\",\r\n    \"UNICEF\",\r\n    \"USAID-USA\"\r\n    // ... other partner options\r\n\r\n];\r\n\r\nconst SearchBoxPartner = ({ selectedPartner, setSelectedPartner }) => {\r\n  return (\r\n    <StaticFilterOptions\r\n      title=\"Partner\"\r\n      options={staticPartner}\r\n      selectedOptions={selectedPartner}\r\n      setSelectedOptions={setSelectedPartner}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBoxPartner;\r\n","import React from \"react\";\r\nimport StaticFilterOptions from \"./StaticFilterOptions\";\r\n\r\nconst StatusOptions = [\r\n    \"ONGOING\",\r\n    \"COMPLETED\",\r\n    \"FORTHCOMING\",\r\n];\r\n\r\nconst SearchBoxStatus = ({ selectedStatus, setSelectedStatus }) => {\r\n  return (\r\n    <StaticFilterOptions\r\n      title=\"Status\"\r\n      options={StatusOptions}\r\n      selectedOptions={selectedStatus}\r\n      setSelectedOptions={setSelectedStatus}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBoxStatus;\r\n","import React from \"react\";\r\nimport StaticFilterOptions from \"./StaticFilterOptions\";\r\n\r\nconst TopicOptions = [\r\n  \"Agriculture\",\r\n  \"Livestock & pastoralism\",\r\n  \"Forestry & biodiversity\",\r\n  \"Fisheries & aquaculture\",\r\n  \"Natural resource management and Climate adaptation and mitigation\",\r\n  \"Employment & revenues\",\r\n  \"Food security and social protection\",\r\n  \"Nutrition and health\",\r\n  \"Demography and migration\",\r\n  \"Energy\",\r\n  \"Water & sanitation\",\r\n  \"Markets, prices & trade\",\r\n  \"Gender (Youth and women)\",\r\n  \"Governance\",\r\n  \"Resilience\",\r\n  \"Youth\",\r\n  \"Protection, paix\",\r\n  // ... other Topic options\r\n];\r\n\r\nconst SearchBoxTopic = ({ selectedTopics, setSelectedTopics }) => {\r\n  return (\r\n    <StaticFilterOptions\r\n      title=\"Topic\"\r\n      options={TopicOptions}\r\n      selectedOptions={selectedTopics}\r\n      setSelectedOptions={setSelectedTopics}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBoxTopic;\r\n","import React from \"react\";\r\nimport StaticFilterOptions from \"./StaticFilterOptions\";\r\n\r\nconst TargetOptions = [\r\n  \"SDG 1\",\r\n  \"SDG 2\",\r\n  \"SDG 3\",\r\n  \"SDG 4\",\r\n  \"SDG 5\",\r\n  \"SDG 6\",\r\n  \"SDG 7\",\r\n  \"SDG 8\",\r\n  \"SDG 9\",\r\n  \"SDG 10\",\r\n  \"SDG 11\",\r\n  \"SDG 12\",\r\n  \"SDG 13\",\r\n  \"SDG 14\",\r\n  \"SDG 15\",\r\n  \"SDG 16\",\r\n  \"SDG 17\",\r\n];\r\n\r\nconst SearchBoxTarget = ({ selectedTargets, setSelectedTargets }) => {\r\n  return (\r\n    <StaticFilterOptions\r\n      title=\"SDG\"\r\n      options={TargetOptions}\r\n      selectedOptions={selectedTargets}\r\n      setSelectedOptions={setSelectedTargets}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBoxTarget;\r\n","import React from \"react\";\r\nimport StaticFilterOptions from \"./StaticFilterOptions\";\r\n\r\nconst staticProjectTypes = [\r\n    \"Humanitarian Aid\",\r\n    \"Development\",\r\n    \"Peace\",\r\n];\r\n\r\nconst SearchBoxProjectTypes = ({ selectedProjectTypes, setselectedProjectTypes }) => {\r\n  return (\r\n    <StaticFilterOptions\r\n      title=\"Project Type\"\r\n      options={staticProjectTypes}\r\n      selectedOptions={selectedProjectTypes}\r\n      setSelectedOptions={setselectedProjectTypes}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBoxProjectTypes;\r\n","import React from \"react\";\r\nimport Mapfilter from \"./Mapfilter\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport SearchBoxLocation from \"./SearchBoxLocation\";\r\nimport SearchBoxPartner from \"./SearchBoxPartner\";\r\nimport SearchBoxStatus from \"./SearchBoxStatus\";\r\nimport SearchBoxTopic from \"./SearchBoxTopic\";\r\nimport SearchBoxTarget from \"./SearchBoxTarget\";\r\nimport SearchBoxProjectTypes from \"./SearchBoxProjectType\";\r\nimport \"../styles/Search.css\";\r\n\r\nconst Search = ({\r\n  searchQuery,\r\n  setSearchQuery,\r\n  selectedPartner,\r\n  setSelectedPartner,\r\n  selectedLocations,\r\n  setSelectedLocations,\r\n  selectedStatus,\r\n  setSelectedStatus,\r\n  selectedTopics,\r\n  setSelectedTopics,\r\n  selectedTargets,\r\n  setSelectedTargets,\r\n  selectedProjectTypes,\r\n  setselectedProjectTypes\r\n}) => {\r\n  return (\r\n    <div className=\"search-container\">\r\n      <SearchBox\r\n        searchQuery={searchQuery}\r\n        setSearchQuery={setSearchQuery}\r\n      />\r\n      <SearchBoxLocation\r\n        selectedLocations={selectedLocations}\r\n        setSelectedLocations={setSelectedLocations}\r\n      />\r\n      <SearchBoxPartner\r\n        selectedPartner={selectedPartner}\r\n        setSelectedPartner={setSelectedPartner}\r\n      />\r\n      <SearchBoxStatus\r\n        selectedStatus={selectedStatus}\r\n        setSelectedStatus={setSelectedStatus}\r\n      />\r\n      <SearchBoxTopic\r\n        selectedTopics={selectedTopics}\r\n        setSelectedTopics={setSelectedTopics}\r\n      />\r\n      <SearchBoxTarget\r\n        selectedTargets={selectedTargets}\r\n        setSelectedTargets={setSelectedTargets}\r\n      />\r\n      <SearchBoxProjectTypes\r\n        selectedProjectTypes={selectedProjectTypes}\r\n        setselectedProjectTypes={setselectedProjectTypes}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport locationIcon from \"../assets/location-dot-solid.svg\"\r\nimport picPlaceholder from \"../assets/picture-placeholder.png\"\r\nimport \"../styles/DataBlock.css\"\r\n\r\nconst DataBlock = ({ project, location, partners, detail, status }) => {\r\n    return (\r\n      <div className=\"data-block\">\r\n        <div className=\"picture-wrapper\">\r\n          <div className=\"status-indicator\" style={{ color: \"white\", backgroundColor: status === \"COMPLETED\" ? \"green\" : \"orange\" }}>\r\n            {status}\r\n          </div>\r\n          <img src={picPlaceholder} alt=\"placeHolder\"/>\r\n        </div>\r\n        <div className=\"content\">\r\n          <h2 className=\"project-name\">{project}</h2>\r\n          <div className=\"location\">\r\n            <img src={locationIcon} alt=\"Location\" />\r\n            <span>{location}</span>\r\n          </div>\r\n          <p className=\"partners\">Partners: {partners}</p>\r\n          <a className=\"details-link\" href={detail} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <div className=\"more-button\">More</div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default DataBlock;\r\n","import React, { useState } from \"react\";\r\nimport DataBlock from \"./DataBlock\";\r\nimport \"../styles/DataBlocksList.css\";\r\nimport \"../styles/CustomSwitch.css\"; // Make sure to import the custom switch styles\r\nimport { centroid } from '@turf/turf';\r\n\r\n\r\nconst DataBlocksList = ({ filteredDataBlock }) => {\r\n  const [viewMode, setViewMode] = useState(\"grid\"); // Add view mode state\r\n\r\n  const toggleViewMode = () => {\r\n    setViewMode(viewMode === \"grid\" ? \"list\" : \"grid\");\r\n  };\r\n\r\n  const exportToCSV = () => {\r\n    const header = Object.keys(filteredDataBlock[0]).join(\",\"); // Get the keys of the first entry as headers\r\n    const dataRows = filteredDataBlock.map(entry => Object.values(entry).join(\",\")); // Convert each entry to a CSV row\r\n  \r\n    const csvContent = `data:text/csv;charset=utf-8,${header}\\n${dataRows.join(\"\\n\")}`;\r\n  \r\n    const encodedUri = encodeURI(csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"data.csv\");\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n        \r\n  return (\r\n    <div className=\"data-blocks-list\">\r\n      <div className=\"view-mode-switch\">\r\n        <span>Grid</span>\r\n        <label className=\"switch\">\r\n          <input type=\"checkbox\" onChange={toggleViewMode} />\r\n          <span className=\"slider round\"></span>\r\n        </label>\r\n        <span>List</span>\r\n      </div>\r\n      <button className=\"export-button\" onClick={exportToCSV}>Export to CSV</button>\r\n      <div className={viewMode === \"grid\" ? \"data-blocks-grid\" : \"data-blocks-list\"}>\r\n        {filteredDataBlock.map((entry, index) => (\r\n          <DataBlock\r\n            key={index}\r\n            project={entry.Project}\r\n            location={entry.Location}\r\n            partners={entry.Partners}\r\n            detail={entry.Detail}\r\n            status={entry.Status}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataBlocksList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport MapView from './components/MapView';\r\nimport Timebar from './components/Timebar';\r\nimport Sidebar from './components/Sidebar';\r\nimport Table from './components/Table';\r\nimport Mapfilter from './components/Mapfilter';\r\nimport Search from \"./components/Search\";\r\nimport DataBlocksList from \"./components/DataBlocksList\";\r\nimport data from \"./data/data.json\";\r\n\r\n\r\nexport default function App() {\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const [selectedStatus, setSelectedStatus] = useState([]);\r\n    const [selectedLocations, setSelectedLocations] = useState([]);\r\n    const [selectedPartner, setSelectedPartner] = useState([]);\r\n    const [selectedProjectTypes, setselectedProjectTypes] = useState([]);\r\n    const [selectedTargets, setSelectedTargets] = useState([]);\r\n    const [selectedTopics, setSelectedTopics] = useState([]);\r\n\r\n    const [countryData, setCountryData] = useState(null);\r\n    const [level1Data, setLevel1Data] = useState(null);\r\n    const [level2Data, setLevel2Data] = useState(null);//for diff layers\r\n    const [protocoleData, setProtocoleData]= useState(null);\r\n    const [selectedYear, setSelectedYear] = useState(2023);\r\n    const [selectedMonth, setSelectedMonth] = useState(3);\r\n    const [hoveredRegion, setHoveredRegion] = useState(null);\r\n    const [filteredData, setFilteredData] = useState({\r\n      filteredCountryData: [],\r\n      filteredLevel1Data: [],\r\n      filteredLevel2Data: [],\r\n    });\r\n    const handleFilteredDataChange = (filteredData) => {\r\n      setFilteredData(filteredData);\r\n    };\r\n\r\n    const handleYearChange = (year) => {\r\n      setSelectedYear(year);\r\n    };\r\n    const handleMonthChange = (month) => {\r\n      setSelectedMonth(month);\r\n    };\r\n    \r\n    const handleRegionChange= (region) => { \r\n      setHoveredRegion(region);\r\n      \r\n    };\r\n\r\n    const handleClearAllFilters = () => {\r\n      setSearchQuery(\"\");\r\n      setSelectedStatus([]);\r\n      setSelectedLocations([]);\r\n      setSelectedPartner([]);\r\n      setselectedProjectTypes([]);\r\n      setSelectedTargets([]);\r\n      setSelectedTopics([]);\r\n    };\r\n\r\n    useEffect(() => { \r\n        async function fetchData() {\r\n          try {\r\n            const responseCountry = await axios.get('./data/output_country.geojson');\r\n            setCountryData(responseCountry.data);\r\n    \r\n            const responseLevel1 = await axios.get('./data/output_level1.geojson');\r\n            setLevel1Data(responseLevel1.data);\r\n    \r\n            const responseLevel2 = await axios.get('./data/output_level2.geojson');\r\n            setLevel2Data(responseLevel2.data);\r\n\r\n            const responseProtocole = await axios.get('./data/output_protocol.geojson');\r\n            setProtocoleData(responseProtocole.data);\r\n              \r\n\r\n          } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n          }\r\n        }\r\n    \r\n        fetchData();\r\n      }, []);\r\n\r\n    const filteredDataBlock = data\r\n      .filter((entry) => {\r\n        if (selectedPartner.length === 0) {\r\n          return true;\r\n        }\r\n        const partnersArray = (entry.Partners || \"\").split(\";\").map(partner => partner.trim());\r\n        return selectedPartner.some((selectedPartner) => partnersArray.includes(selectedPartner));\r\n      })\r\n      .filter((entry) => {\r\n        if (selectedLocations.length === 0) {\r\n          return true;\r\n        }\r\n        const locationsArray = (entry.Location || \"\").split(\";\").map(location => location.trim());\r\n        return selectedLocations.some((selectedLocation) => locationsArray.includes(selectedLocation))\r\n      })\r\n      .filter((entry) => {\r\n        if (selectedStatus.length === 0) {\r\n          return true;\r\n        }\r\n        const statusArray = (entry.Status || \"\").split(\";\").map(status => status.trim());\r\n        return selectedStatus.some((selectedStatus) => statusArray.includes(selectedStatus))\r\n      })\r\n      .filter((entry) => {\r\n        if (selectedTopics.length === 0) {\r\n          return true;\r\n        }\r\n        const topicsArray = (entry.Topic || \"\").split(\";\").map(topic => topic.trim());\r\n        return selectedTopics.some((selectedTopic) => topicsArray.includes(selectedTopic))\r\n      })\r\n      .filter((entry) => {\r\n        if (selectedTargets.length === 0) {\r\n          return true;\r\n        }\r\n        const targetsArray = (entry.Target || \"\").split(\";\").map(target => target.trim());\r\n        return selectedTargets.some((selectedTarget) => targetsArray.includes(selectedTarget))\r\n      })\r\n      .filter((entry) => {\r\n        if (selectedProjectTypes.length === 0) {\r\n          return true;\r\n        }\r\n        const projectTypesArray = (entry.ProjectType || \"\").split(\";\").map(projectType => projectType.trim());\r\n        return selectedProjectTypes.some((selectedProjectTypes) => projectTypesArray.includes(selectedProjectTypes));\r\n      })\r\n      .filter((entry) => {\r\n        if (!searchQuery) {\r\n          return true;\r\n        }\r\n        return entry.Project.toLowerCase().includes(searchQuery.toLowerCase());\r\n      });\r\n\r\n      // Calculating projects per country\r\n      let countryProjectArray = [];\r\n\r\n      // Move the logic for creating countryProjectArray here\r\n      const projectsPerCountry = filteredDataBlock.reduce((acc, entry) => {\r\n        const locations = entry.Location.split(';').map(location => location.trim());\r\n\r\n        locations.forEach(location => {\r\n          // Remove spaces from the location and convert it to lowercase\r\n          const modifiedLocation = location.replace(/\\s+/g, '');\r\n\r\n          if (!countryData) {\r\n            return; // Handle the case when countryData is null or undefined\r\n          }\r\n\r\n          // Loop through countryData to find a matching Country\r\n          countryData.features.forEach(countryFeature => {\r\n            const countryProperties = countryFeature.properties;\r\n            const countryName = countryProperties.Country;\r\n\r\n            if (modifiedLocation === countryName) {\r\n              if (!acc[modifiedLocation]) {\r\n                acc[modifiedLocation] = {\r\n                  country: modifiedLocation,\r\n                  countProjects: 0,\r\n                  centroid: null,\r\n                };\r\n              }\r\n              acc[modifiedLocation].countProjects++;\r\n\r\n              // Calculate the centroid\r\n              const countryGeometry = countryFeature.geometry;\r\n              const countryCentroid = [];\r\n\r\n              // Add centroid to the countryProjectArray\r\n              acc[modifiedLocation].centroid = countryCentroid;\r\n            }\r\n          });\r\n        });\r\n\r\n        return acc;\r\n      }, {});\r\n\r\n      // Convert the object into an array of objects with named properties\r\n      countryProjectArray = Object.values(projectsPerCountry).map(({ country, countProjects, centroid }) => ({\r\n        country: country.replace(/\\s+/g, ' '),\r\n        countProjects,\r\n        centroid,\r\n      }));\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <MapView\r\n        protocoleData={protocoleData}\r\n        countryData={countryData}\r\n        regionInfo={hoveredRegion}\r\n        onChangeYear={handleYearChange}\r\n        onChangeRegion={handleRegionChange}\r\n        selectedYear={selectedYear}\r\n        onChangeMonth={handleMonthChange}\r\n        selectedMonth={selectedMonth}\r\n        countryProjectArray={countryProjectArray}/>      \r\n      <Timebar\r\n        onChangeYear={handleYearChange}\r\n        selectedYear={selectedYear}\r\n        onChangeMonth={handleMonthChange}\r\n        selectedMonth={selectedMonth} />\r\n      <Sidebar\r\n        countryData={countryData}\r\n        level1Data={level1Data}\r\n        level2Data={level2Data}\r\n        regionInfo={hoveredRegion}\r\n        onChangeYear={handleYearChange}\r\n        selectedYear={selectedYear}\r\n        onChangeMonth={handleMonthChange}\r\n        selectedMonth={selectedMonth} /> \r\n      <Search\r\n        searchQuery={searchQuery}\r\n        setSearchQuery={setSearchQuery}\r\n        selectedPartner={selectedPartner}\r\n        setSelectedPartner={setSelectedPartner}\r\n        selectedLocations={selectedLocations}\r\n        setSelectedLocations={setSelectedLocations}\r\n        selectedStatus={selectedStatus}\r\n        setSelectedStatus={setSelectedStatus}\r\n        selectedTopics={selectedTopics}\r\n        setSelectedTopics={setSelectedTopics}\r\n        selectedTargets={selectedTargets}\r\n        setSelectedTargets={setSelectedTargets}\r\n        selectedProjectTypes={selectedProjectTypes}\r\n        setselectedProjectTypes={setselectedProjectTypes}\r\n      />\r\n      <button className=\"export-button\" onClick={handleClearAllFilters}>Clear All Filter</button>\r\n      <DataBlocksList\r\n        filteredDataBlock={filteredDataBlock}/>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}