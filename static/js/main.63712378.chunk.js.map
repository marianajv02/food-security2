{"version":3,"sources":["components/Legend.js","components/Sidebar.js","components/MapView.js","components/Timebar.js","components/Table.js","components/Draft.js","components/StaticFilterOptions.js","components/Mapfilter.js","App.js","index.js"],"names":["Legend","colors","React","createElement","className","map","layer","i","key","style","backgroundColor","formatNumber","number","toLocaleString","maximumFractionDigits","calculatePercentage","value","total","toFixed","Sidebar","_ref","countryData","level1Data","level2Data","regionInfo","selectedYear","selectedMonth","_useState","useState","_useState2","_slicedToArray","appendedData","setAppendedData","useEffect","mergedData","concat","_toConsumableArray","features","clickedKey","foundRow","find","feature","properties","Key","Name","Population","Phase1","Percent1","parseFloat","Phase2","Percent2","Phase3","Percent3","Phase4","Percent4","Phase5","Percent5","src","alt","mapboxgl","accessToken","MapView","onChangeRegion","mapContainer","useRef","lng","setLng","_useState3","_useState4","lat","setLat","_useState5","_useState6","zoom","setZoom","_useState7","_useState8","handleMove","current","getCenter","getZoom","layerNames","createLayerClickHandler","e","console","log","lngLat","newHoveredRegion","name","popup","remove","Popup","maxWidth","maxHeight","setLngLat","setHTML","Name_2","addTo","forEach","layerName","getLayer","setPaintProperty","yearValue","parseInt","monthValue","getMapboxExpression","Map","container","center","on","ref","Timebar","onChangeYear","onChangeMonth","setSelectedYear","setSelectedMonth","handleMonthButtonClick","month","monthNumber","March","June","November","undefined","type","min","max","step","onChange","event","sliderValue","target","selected","Math","round","maxYear","onClick","Table","calculateColumnSum","columnName","rowData","reduce","row","replace","Draft","field","rowgroup","hide","headerClass","width","columnDefs","populationData","Country","L1","L2","totalRow","rowClass","allRows","AgGridReact","groupDisplayType","StaticFilterOptions","title","options","selectedOptions","setSelectedOptions","showDropdown","setShowDropdown","searchText","setSearchText","dropdownRef","handleDocumentClick","contains","document","addEventListener","removeEventListener","filteredOptions","filter","option","toLowerCase","includes","placeholder","id","checked","length","htmlFor","selectedOption","handleOptionToggle","Mapfilter","handleFilteredDataChange","filterCountry","setFilterCountry","level1Filter","setLevel1Filter","level2Filter","setLevel2Filter","countryOptions","setCountryOptions","_useState9","_useState10","level1Options","setLevel1Options","_useState11","_useState12","level2Options","setLevel2Options","_useState13","_useState14","outputCountryData","setOutputCountryData","_useState15","_useState16","outputLevel1Data","setOutputLevel1Data","_useState17","_useState18","outputLevel2Data","setOutputLevel2Data","axios","get","then","response","data","countries","catch","error","level1Names","Name_1","level2Names","availableLevel1Options","availableLevel2Options","filteredCountryFeatures","filteredLevel1Features","filteredLevel2Features","push","apply","geometry","filteredData","filteredCountryData","filteredLevel1Data","filteredLevel2Data","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","state","Error","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","App","setCountryData","setLevel1Data","setLevel2Data","hoveredRegion","setHoveredRegion","setFilteredData","handleYearChange","year","handleMonthChange","_fetchData","_asyncToGenerator","_callee","responseCountry","responseLevel1","responseLevel2","_context","t0","arguments","fetchData","region","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.63712378.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Legend.css';\r\n\r\nfunction Legend() {\r\n    const layers = ['Phase 1', 'Phase 2', 'Phase 3', 'Phase 4', 'Phase 5', 'No data'];\r\n    const colors = ['#53ca57', '#ffe252', '#fa890f', '#eb3333', '#900101e3','#ffffff'];\r\n\r\n    return (\r\n        <nav className='legend'>\r\n            <div className='legend-container'>\r\n                {layers.map((layer, i) => (\r\n                    <div key={i} className='legend-item'>\r\n                        <span className='legend-key' style={{ backgroundColor: colors[i] }} />\r\n                        <span className='legend-value'>{layer}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Legend;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Sidebar.css';\r\nimport App from '../App';\r\n\r\nfunction Sidebar({ countryData, level1Data, level2Data, regionInfo, selectedYear, selectedMonth }) { //REGIONINFO TRAE EL KEY\r\n  const [appendedData, setAppendedData] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n    if (countryData && level1Data && level2Data){\r\n        const mergedData = [ ...countryData.features, ...level1Data.features, ...level2Data.features ];\r\n        setAppendedData(mergedData);\r\n    };\r\n    \r\n  }, [regionInfo]);\r\n\r\n\r\n  if (!regionInfo) {\r\n    return null;\r\n  }\r\n\r\n  const clickedKey = regionInfo.key;\r\n\r\n  \r\n  let foundRow = null;\r\n  if (appendedData) {\r\n    foundRow = appendedData.find((feature) => feature.properties.Key === clickedKey);\r\n\r\n  }\r\n\r\n  const properties = foundRow ? foundRow.properties : {};\r\n\r\n  const Name= properties['Name_2'];\r\n  const Population = formatNumber(properties[`POP-${selectedYear}-0${selectedMonth}`]);\r\n  const Phase1 = formatNumber(properties[`PH1-${selectedYear}-0${selectedMonth}`]);\r\n  const Percent1 = calculatePercentage(\r\n    parseFloat(properties[`PH1-${selectedYear}-0${selectedMonth}`]),\r\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\r\n  );\r\n\r\n  const Phase2 = formatNumber(properties[`PH2-${selectedYear}-0${selectedMonth}`]);\r\n  const Percent2 = calculatePercentage(\r\n    parseFloat(properties[`PH2-${selectedYear}-0${selectedMonth}`]),\r\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\r\n  );\r\n  const Phase3 = formatNumber(properties[`PH3-${selectedYear}-0${selectedMonth}`]);\r\n  const Percent3 = calculatePercentage(\r\n    parseFloat(properties[`PH3-${selectedYear}-0${selectedMonth}`]),\r\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\r\n  );\r\n  const Phase4 = formatNumber(properties[`PH4-${selectedYear}-0${selectedMonth}`]);\r\n  const Percent4 = calculatePercentage(\r\n    parseFloat(properties[`PH4-${selectedYear}-0${selectedMonth}`]),\r\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\r\n  );\r\n  const Phase5 = formatNumber(properties[`PH5-${selectedYear}-0${selectedMonth}`]);\r\n  const Percent5 = calculatePercentage(\r\n    parseFloat(properties[`PH5-${selectedYear}-0${selectedMonth}`]),\r\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\r\n  );\r\n\r\n  return (\r\n    <nav className='sidebar'>\r\n      <div className='sidebar-container'>\r\n        <div className='logo'>\r\n          <img src='/images/family_icon.jpg' alt='Family Icon' />\r\n          <span className='logo-text'>Food and nutrition situation {selectedYear} </span> {/* adding selected month as trial*/}\r\n        </div>\r\n\r\n        <div className='region-info'>\r\n          {/* Display information about the hovered region */}\r\n          <h2>\r\n            <div>\r\n              <p>\r\n              {Name}\r\n              </p>\r\n            </div>\r\n          </h2>\r\n\r\n          <div className='info-row'>\r\n            <h4>Total population:</h4>\r\n            <p>{Population}</p>\r\n          </div>\r\n\r\n          <div className='info-row'>\r\n            <h4>Phase 1:</h4>\r\n            <p>{Phase1}</p>\r\n            <p>{Percent1}%</p>\r\n          </div>\r\n          <div className='info-row'>\r\n            <h4>Phase 2:</h4>\r\n            <p>{Phase2}</p>\r\n            <p>{Percent2}%</p>\r\n          </div>\r\n          <div className='info-row'>\r\n            <h4>Phase 3:</h4>\r\n            <p>{Phase3}</p>\r\n            <p>{Percent3}%</p>\r\n          </div>\r\n          <div className='info-row'>\r\n            <h4>Phase 4:</h4>\r\n            <p>{Phase4}</p>\r\n            <p>{Percent4}%</p>\r\n          </div>\r\n          <div className='info-row'>\r\n            <h4>Phase 5:</h4>\r\n            <p>{Phase5}</p>\r\n            <p>{Percent5}%</p>\r\n          </div>\r\n          {/* Add more fields as needed */}\r\n        </div>\r\n        {/* More sidebar content */}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction formatNumber(number) {\r\n  return number ? number.toLocaleString('en-US', { maximumFractionDigits: 0 }) : '';\r\n}\r\n\r\nfunction calculatePercentage(value, total) {\r\n  const percentage = total ? ((value || 0) / total) * 100 : 0;\r\n  return percentage.toFixed(2); // Displaying percentage with two decimal places\r\n}\r\n\r\nexport default Sidebar;\r\n","// EVERYTHING WORKS BUT ITS SUPER SLOW WHEN SELECTING REGIONS (ON-CLICK)- NEED TO OPTIMIZE RE-RENDERS IN THE USEEFFECT\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport Legend from './Legend';\r\nimport App from '../App';\r\nimport './MapView.css';\r\nimport Sidebar from './Sidebar';\r\nimport { selected } from '@syncfusion/ej2-react-pivotview';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFyaWFuYWp2LSIsImEiOiJjbGs3eXJmbzEwYXR3M2RxbnRuOHVkaHV3In0.rVa0wb_O5OTeuk07J90w5A';\r\n\r\nfunction MapView({selectedYear, selectedMonth, onChangeRegion}) {\r\n  const mapContainer = useRef(null);\r\n  const map = useRef(null);\r\n  const [lng, setLng] = useState(0);\r\n  const [lat, setLat] = useState(17);\r\n  const [zoom, setZoom] = useState(3.4);\r\n  const [hoveredRegion, setHoveredRegion] = useState(null);\r\n\r\n  const initializeMap = () => {\r\n    map.current = new mapboxgl.Map({\r\n      container: mapContainer.current,\r\n      style: 'mapbox://styles/marianajv-/cllf4b5be012q01pb6nqq4k5x',\r\n      center: [lng, lat],\r\n      zoom: zoom\r\n    });\r\n    map.current.on('move', handleMove);\r\n    layerNames.forEach(layerName => {\r\n      map.current.on('click', layerName, createLayerClickHandler);\r\n    }); \r\n\r\n\r\n  };\r\n\r\n  const handleMove = () => {\r\n    setLng(map.current.getCenter().lng.toFixed(4));\r\n    setLat(map.current.getCenter().lat.toFixed(4));\r\n    setZoom(map.current.getZoom().toFixed(2));\r\n  };\r\n\r\n  const layerNames = ['output_country-2uwmmy', 'output_level1-5iewsu', 'output_level2-8nur76'];\r\n\r\n  const createLayerClickHandler = (e) => {// CLICKHANDLER si lo dejamos en key ya no tiene que depender de year, solo de la posicion \r\n    console.log('clickhandler ran', e.features)\r\n      \r\n    const feature = e.features[0];\r\n    const lngLat = e.lngLat;\r\n\r\n    const newHoveredRegion = {\r\n      name: feature.properties['Name_2'],\r\n      key: feature.properties['Key'] \r\n    };\r\n\r\n    let popup = null;\r\n\r\n    if (popup) {\r\n      popup.remove();\r\n    }\r\n\r\n    popup = new mapboxgl.Popup({\r\n      maxWidth: '100px',\r\n      maxHeight: '50px',\r\n      className: 'custom-popup'\r\n    })\r\n    .setLngLat(lngLat)\r\n    .setHTML(`<h5>${feature.properties.Name_2}</h5>`)\r\n  .addTo(map.current);\r\n\r\n    onChangeRegion(newHoveredRegion);\r\n  };//CLICKHANDLER\r\n  \r\n// separating useffects\r\n\r\nuseEffect(() => {\r\n  let isMounted = true;\r\n\r\n  if (!map.current) {\r\n    initializeMap();\r\n  } else {\r\n\r\n    layerNames.forEach(layerName => {\r\n      const existingLayer = map.current.getLayer(layerName);\r\n      if (existingLayer) {\r\n        map.current.setPaintProperty(\r\n          layerName,\r\n          'fill-color',\r\n          getMapboxExpression(selectedYear, selectedMonth)\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  return () => {\r\n    isMounted = false;\r\n  };\r\n}, [selectedYear, selectedMonth]);\r\n\r\nuseEffect(() => {\r\n  let isMounted = true;\r\n\r\n  if (map.current) {\r\n    map.current.on('move', handleMove);\r\n    \r\n  }\r\n\r\n  return () => {\r\n    isMounted = false;\r\n  };\r\n}, [lat, lng, zoom]);\r\n\r\n\r\n  \r\n    return (\r\n      <div className='view-container'>\r\n        \r\n        <div ref={mapContainer} className=\"map-container\" />\r\n\r\n        <Legend/>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n\r\n  function getMapboxExpression(selectedYear, selectedMonth) {\r\n    const yearValue = parseInt(selectedYear);\r\n    const monthValue = parseInt(selectedMonth);\r\n    \r\n    return [\r\n      'case',\r\n      ['==', ['number', ['get', `CLAS-${yearValue}-0${monthValue}`]], 1], '#53ca57',\r\n      ['==', ['number', ['get', `CLAS-${yearValue}-0${monthValue}`]], 2], '#ffe252',\r\n      ['==', ['number', ['get', `CLAS-${yearValue}-0${monthValue}`]], 3], '#fa890f',\r\n      ['==', ['number', ['get', `CLAS-${yearValue}-0${monthValue}`]], 4], '#eb3333',\r\n      '#ffffff'\r\n    ];\r\n  }\r\n\r\n\r\nexport default MapView;\r\n","\r\nimport React, { useState } from 'react';\r\nimport './Timebar.css';\r\nimport MapView from './MapView';\r\n\r\n\r\nconst Timebar = ({ onChangeYear, onChangeMonth }) => {\r\n  const minYear = 2014;\r\n  const maxYear = 2023;\r\n  const [selectedYear, setSelectedYear] = useState(maxYear);\r\n  const [selectedMonth, setSelectedMonth] = useState(null);\r\n\r\n  const handleSliderChange = (event) => {\r\n    const yearRange = maxYear - minYear;\r\n    const sliderValue = parseFloat(event.target.value);\r\n    const selected = Math.round(minYear + sliderValue * yearRange);\r\n    setSelectedYear(selected);\r\n    if (onChangeYear) {\r\n      onChangeYear(selected);\r\n    }\r\n  };\r\n\r\n  const handleMonthButtonClick = (month) => {\r\n    const monthMap = {\r\n      March: 3,\r\n      June: 6,\r\n      November: 11,\r\n    };\r\n\r\n    const monthNumber = monthMap[month];\r\n    if (monthNumber !== undefined) {\r\n      setSelectedMonth(monthNumber);\r\n      if (onChangeMonth) {\r\n        onChangeMonth(monthNumber);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    \r\n    <div className=\"timebar\">\r\n      <div className=\"year-bar\">\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          step=\"0.01\"\r\n          value={(selectedYear - minYear) / (maxYear - minYear)}\r\n          onChange={handleSliderChange}\r\n          className=\"slider\"\r\n        />\r\n        <div className=\"year-indicator\">{selectedYear}</div>\r\n      </div>\r\n      <div className=\"month-buttons\">\r\n        <button\r\n          className={selectedMonth === 3 ? 'selected' : ''}\r\n          onClick={() => handleMonthButtonClick('March')}\r\n        >\r\n          March\r\n        </button>\r\n        <button\r\n          className={selectedMonth === 6 ? 'selected' : ''}\r\n          onClick={() => handleMonthButtonClick('June')}\r\n        >\r\n          June\r\n        </button>\r\n        <button\r\n          className={selectedMonth === 11 ? 'selected' : ''}\r\n          onClick={() => handleMonthButtonClick('November')}\r\n        >\r\n          November\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timebar;\r\n","import React, { useState } from 'react';\r\nimport _ from 'lodash';\r\nimport './Table.css'; \r\nimport Timebar from './Timebar';\r\nimport App from '../App';\r\n\r\nfunction Table({ countryData, level1Data, level2Data, selectedYear }) {\r\n \r\n\r\n    const renderColumns = () => {\r\n        const columns = [];\r\n      \r\n        if (level2Data && level2Data.features && level2Data.features.length > 0) {\r\n          const properties = level2Data.features[0].properties;\r\n          const columnNames=['Population', 'Phase 1','Phase 2','Phase 3','Phase 4','Phase 5','Phase 3-5'];      \r\n          const columnColors = ['grey-bg', 'green-bg', 'yellow-bg', 'orange-bg', 'red-bg', 'dark-red-bg', 'dark-red-bg'];      \r\n \r\n\r\n          Object.keys(properties).forEach((key, index) => {\r\n            \r\n            if (key.includes(`-${selectedYear}-03`)) {\r\n              if (key.includes('CLAS')|| key.includes('PROT')) { \r\n                return; // Skip unwanted columns\r\n              }\r\n      \r\n              const adjustedKey = key.replace(`-${selectedYear}-03`, ''); // Remove '-2023-03' from the key\r\n              const columnClass = columnColors[1];\r\n\r\n              \r\n              columns.push({ key: adjustedKey, class: columnClass });\r\n            }\r\n          });\r\n      \r\n          // Push the last column with the dark red class\r\n          columns.unshift({ key: 'L2', class: 'green-bg' });\r\n          columns.unshift({ key: 'L1', class: 'green-bg' });\r\n          columns.push({ key: '%', class: 'green-bg' });\r\n        }\r\n      \r\n        return columns.map((column, index) => (\r\n          <th key={index} className={column.class}>\r\n            {column.key}\r\n          </th>\r\n        ));\r\n      };\r\n  \r\n      const renderCountryRows = () => {\r\n        if (countryData && countryData.features && countryData.features.length > 0) {\r\n          return countryData.features.map((feature, index) => { \r\n            const properties = feature.properties;// hasta aqui todo igual\r\n         \r\n    \r\n            return (\r\n                <tr key={index}>\r\n                  <td>{properties.Country}</td>\r\n                  <td></td>\r\n              <td></td>\r\n  \r\n    \r\n    \r\n                  {Object.entries(properties).map(([key, value]) => {\r\n                    if (key.includes(`-${selectedYear}-03`)) {\r\n                      if (key.includes('CLAS')|| key.includes('PROT')) {\r\n                        return null;\r\n                      }\r\n                      return <td key={key}>{formatNumber(value)}</td>;\r\n                    }\r\n                    return null;\r\n                  })}\r\n               <td>\r\n    \r\n                </td>\r\n              </tr>\r\n            );\r\n          });\r\n        }\r\n        return null;\r\n      };    \r\n\r\n\r\n      const renderLevel1Rows = () => {\r\n        if (level1Data && level1Data.features && level1Data.features.length > 0) {\r\n          return level1Data.features.map((feature, index) => { \r\n            const properties = feature.properties;// hasta aqui todo igual\r\n         \r\n    \r\n            return (\r\n                <tr key={index}>\r\n                  <td>{properties.Country}</td>\r\n                  <td>{properties.Name_1}</td>\r\n              <td></td>\r\n  \r\n    \r\n    \r\n                  {Object.entries(properties).map(([key, value]) => {\r\n                    if (key.includes(`-${selectedYear}-03`)) {\r\n                      if (key.includes('CLAS')|| key.includes('PROT')) {\r\n                        return null;\r\n                      }\r\n                      return <td key={key}>{formatNumber(value)}</td>;\r\n                    }\r\n                    return null;\r\n                  })}\r\n               <td>\r\n    \r\n                </td>\r\n              </tr>\r\n            );\r\n          });\r\n        }\r\n        return null;\r\n      };    \r\n\r\n\r\n\r\n\r\n\r\n\r\n  const renderRows = () => {\r\n    if (level2Data && level2Data.features && level2Data.features.length > 0) {\r\n      return level2Data.features.map((feature, index) => { \r\n        const properties = feature.properties;// hasta aqui todo igual\r\n     \r\n\r\n        return (\r\n            <tr key={index}>\r\n              <td>{properties.Country}</td>\r\n              <td>{properties.Name_1}</td>\r\n              <td>{properties.Name_2}</td>\r\n\r\n\r\n\r\n              {Object.entries(properties).map(([key, value]) => {\r\n                if (key.includes(`-${selectedYear}-03`)) {\r\n                  if (key.includes('CLAS')|| key.includes('PROT')) {\r\n                    return null;\r\n                  }\r\n                  return <td key={key}>{formatNumber(value)}</td>;\r\n                }\r\n                return null;\r\n              })}\r\n           <td>\r\n\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n    return null;\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"table-container\">\r\n      <div className=\"table-wrapper\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"green-bg\"></th>\r\n              {renderColumns()}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {renderCountryRows()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n  \r\n      <div className=\"table-spacing\" /> {/* Add some spacing */}\r\n      \r\n      <div className=\"table-wrapper\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"green-bg\"></th>\r\n              {renderColumns()}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {renderLevel1Rows()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"table-spacing\" /> {/* Add some spacing */}\r\n      <div className=\"table-wrapper\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"green-bg\"></th>\r\n              {renderColumns()}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {renderRows()}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n    \r\n\r\n    \r\n  );\r\n  \r\n}\r\n\r\n\r\nfunction formatNumber(number) {\r\n  if (number === null) {\r\n      return '0'; // Return '0' as a string or 0 if you prefer a number\r\n  }\r\n  \r\n  return number.toLocaleString('en-US', { maximumFractionDigits: 0 });\r\n}\r\n\r\n\r\nfunction calculatePercentage(value, total) {\r\n    const percentage = (value / total) * 100;\r\n    return percentage.toFixed(2); // Displaying percentage with two decimal places\r\n}\r\n\r\n\r\n\r\nexport default Table;\r\n","import React, { useState } from 'react';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport App from '../App';\r\nimport Timebar from './Timebar';\r\nimport 'ag-grid-community/styles/ag-grid.css';\r\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\r\nimport './DraftRow.css';\r\n\r\nconst Draft = ({ countryData, selectedYear, selectedMonth}) => {\r\n // console.log(selectedMonth);\r\n  \r\n  const [columnDefs, setColumnDefs] = useState([\r\n    { field: 'Country', rowgroup: true, hide: false, headerClass: 'custom-header', width: 100  },\r\n    { field: 'L1', headerClass: 'custom-header',width: 100  },\r\n    { field: 'L2', headerClass: 'custom-header',width: 100  },\r\n    { field: 'Population', headerClass: 'custom-header',width: 120  },\r\n    { field: 'Phase 1', headerClass: 'custom-header1',width: 90 },\r\n    { field: 'Phase 2', headerClass: 'custom-header2',width: 90  },\r\n    { field: 'Phase 3', headerClass: 'custom-header3',width: 90  },\r\n    { field: 'Phase 4', headerClass: 'custom-header4',width: 90  },\r\n    { field: 'Phase 5', headerClass: 'custom-header5',width: 90  },\r\n    { field: 'Phase 3-5', headerClass: 'custom-header5',width: 100  },\r\n    { field: '%', headerClass: 'custom-header5',width: 60  }\r\n  ]);\r\n  \r\n    if (!countryData) {\r\n      return null; // Render nothing while data is being fetched\r\n    }\r\n\r\n    const rowData = countryData.features.map((feature) => {\r\n      const populationData = feature.properties[`POP-${selectedYear}-0${selectedMonth}`];\r\n  \r\n      if (populationData === undefined) {\r\n        // Data is not available for this combination, return a message\r\n        return {\r\n          Country: feature.properties['Country'],\r\n          L1: '',\r\n          L2: '',\r\n          Population: 'Data not available',\r\n          'Phase 1': 'Data not available',\r\n          'Phase 2': 'Data not available',\r\n          'Phase 3': 'Data not available',\r\n          'Phase 4': 'Data not available',\r\n          'Phase 5': 'Data not available',\r\n          'Phase 3-5': 'Data not available',\r\n          '%': 'Data not available',\r\n        };\r\n      }\r\n  \r\n      // Data is available, format it\r\n      return {\r\n        Country: feature.properties['Country'],\r\n        L1: feature.properties[''],\r\n        L2: feature.properties[''],\r\n        Population: formatNumber(populationData),\r\n        'Phase 1': formatNumber(feature.properties[`PH1-${selectedYear}-0${selectedMonth}`]),\r\n        'Phase 2': formatNumber(feature.properties[`PH2-${selectedYear}-0${selectedMonth}`]),\r\n        'Phase 3': formatNumber(feature.properties[`PH3-${selectedYear}-0${selectedMonth}`]),\r\n        'Phase 4': formatNumber(feature.properties[`PH4-${selectedYear}-0${selectedMonth}`]),\r\n        'Phase 5': formatNumber(feature.properties[`PH5-${selectedYear}-0${selectedMonth}`]),\r\n        'Phase 3-5': formatNumber(feature.properties[`PH3:5-${selectedYear}-0${selectedMonth}`]),\r\n        '%': calculatePercentage(\r\n          feature.properties[`PH3:5-${selectedYear}-0${selectedMonth}`],\r\n          populationData\r\n        ),\r\n      };\r\n    });\r\n\r\n    const totalRow = {\r\n      Country: 'Total', \r\n      L1: '', \r\n      L2: '',\r\n      Population: formatNumber(calculateColumnSum('Population', rowData)),\r\n      'Phase 1': formatNumber(calculateColumnSum('Phase 1', rowData)),\r\n      'Phase 2': formatNumber(calculateColumnSum('Phase 2', rowData)),\r\n      'Phase 3': formatNumber(calculateColumnSum('Phase 3', rowData)),\r\n      'Phase 4': formatNumber(calculateColumnSum('Phase 4', rowData)),\r\n      'Phase 5': formatNumber(calculateColumnSum('Phase 5', rowData)),\r\n      'Phase 3-5': formatNumber(calculateColumnSum('Phase 3-5', rowData)),\r\n      '%': calculatePercentage(\r\n        calculateColumnSum('Phase 3-5', rowData),\r\n        calculateColumnSum('Population', rowData)\r\n      ),\r\n      \r\n      rowClass: 'total-row',\r\n    };\r\n    \r\n    \r\n    const allRows = [...rowData, totalRow];\r\n\r\n    \r\n\r\n\r\n    const groupDisplayType = 'groupRows';\r\n  \r\n    return (\r\n      <div className=\"ag-theme-alpine\" >\r\n        <AgGridReact rowData={allRows} groupDisplayType={groupDisplayType} columnDefs={columnDefs} />\r\n\r\n      </div>\r\n    );\r\n  };\r\n\r\n  function formatNumber(number) {\r\n    if (number === null) {\r\n        return '0'; // Return '0' as a string or 0 if you prefer a number\r\n    }\r\n    \r\n    return number.toLocaleString('en-US', { maximumFractionDigits: 0 });\r\n  }\r\n  \r\n  function calculatePercentage(value, total) {\r\n    const percentage = (value / total) * 100;\r\n    return percentage.toFixed(2); // Displaying percentage with two decimal places\r\n}\r\n\r\nfunction calculateColumnSum(columnName, rowData) {\r\n  return rowData.reduce((total, row) => total + parseFloat(row[columnName].replace(/,/g, '')) || 0, 0);\r\n}\r\n  \r\n  export default Draft;","import React, { useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./StaticFilterOptions.css\";\r\n\r\nconst StaticFilterOptions = ({ title, options, selectedOptions, setSelectedOptions }) => {\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const dropdownRef = useRef(null);\r\n\r\n  const handleDocumentClick = (event) => {\r\n    if (!dropdownRef.current.contains(event.target)) {\r\n      setShowDropdown(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleDocumentClick);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleDocumentClick);\r\n    };\r\n  }, []);\r\n\r\n  const handleSelectAll = () => {\r\n    if (selectedOptions.length === options.length) {\r\n      setSelectedOptions([]);\r\n    } else {\r\n      setSelectedOptions(options);\r\n    }\r\n  };\r\n\r\n  const handleOptionToggle = (option) => {\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchText(e.target.value);\r\n  };\r\n\r\n  const filteredOptions = options\r\n    .filter(option => option != null)\r\n    .filter((option) => option.toLowerCase().includes(searchText.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"filter-container\">\r\n      <label>{title}:</label>\r\n      <div className=\"search-dropdown\" ref={dropdownRef}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder={`Search by ${title}`}\r\n          value={searchText}\r\n          onChange={handleSearchChange}\r\n          onClick={() => setShowDropdown(true)}\r\n        />\r\n        {showDropdown && (\r\n          <div className=\"checkbox-list\">\r\n            <div>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={`selectAll${title}`}\r\n                value={`selectAll${title}`}\r\n                checked={selectedOptions.length === options.length}\r\n                onChange={handleSelectAll}\r\n              />\r\n              <label htmlFor={`selectAll${title}`}>Select All</label>\r\n            </div>\r\n            {filteredOptions.map((option) => (\r\n              <div key={option}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={option}\r\n                  value={option}\r\n                  checked={selectedOptions.includes(option)}\r\n                  onChange={() => handleOptionToggle(option)}\r\n                />\r\n                <label htmlFor={option}>\r\n                  <span>{option}</span>\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStaticFilterOptions.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedOptions: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  setSelectedOptions: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default StaticFilterOptions;","import React, { useState, useEffect } from \"react\";\r\nimport StaticFilterOptions from \"./StaticFilterOptions\";\r\nimport axios from \"axios\";\r\nimport \"./Mapfilter.css\";\r\nimport { feature } from \"@turf/turf\";\r\nimport App from \"../App\";\r\n\r\nconst Mapfilter = ({ handleFilteredDataChange, countryData, level1Data, level2Data }) => {\r\n\r\n  const [filterCountry, setFilterCountry] = useState([]);\r\n  const [level1Filter, setLevel1Filter] = useState([]);\r\n  const [level2Filter, setLevel2Filter] = useState([]);\r\n\r\n  const [countryOptions, setCountryOptions] = useState([]);\r\n  const [level1Options, setLevel1Options] = useState([]);\r\n  const [level2Options, setLevel2Options] = useState([]);\r\n\r\n  const [outputCountryData, setOutputCountryData] = useState([]);\r\n  const [outputLevel1Data, setOutputLevel1Data] = useState([]);\r\n  const [outputLevel2Data, setOutputLevel2Data] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"./data/output_country.geojson\")\r\n      .then((response) => {\r\n        setOutputCountryData(response.data.features);\r\n        const countries = response.data.features.map(\r\n          (feature) => feature.properties.Country\r\n        );\r\n        setCountryOptions(countries); \r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error loading output_country.geojson:\", error);\r\n      });\r\n\r\n    axios\r\n      .get(\"./data/output_level1.geojson\")\r\n      .then((response) => {\r\n        setOutputLevel1Data(response.data.features);\r\n        const level1Names = response.data.features.map(\r\n          (feature) => feature.properties.Name_1\r\n        );\r\n        setLevel1Options(level1Names);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error loading output_level1.geojson:\", error);\r\n      });\r\n\r\n    axios\r\n      .get(\"./data/output_level2.geojson\")\r\n      .then((response) => {\r\n        setOutputLevel2Data(response.data.features);\r\n        const level2Names = response.data.features.map(\r\n          (feature) => feature.properties.Name_2\r\n        );\r\n        setLevel2Options(level2Names);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error loading output_level2.geojson:\", error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Update filterCountry and available level1Options when level1Filter changes\r\n    const availableLevel1Options = outputLevel1Data\r\n      .filter((feature) => filterCountry.includes(feature.properties.Country))\r\n      .map((feature) => feature.properties.Name_1);\r\n\r\n    setLevel1Options(availableLevel1Options);\r\n  }, [filterCountry, outputLevel1Data]);\r\n\r\n  useEffect(() => {\r\n    // Update filterCountry, level1Filter, and available level2Options when level2Filter changes\r\n    const availableLevel2Options = outputLevel2Data\r\n      .filter(\r\n        (feature) =>\r\n          filterCountry.includes(feature.properties.Country) &&\r\n          level1Filter.includes(feature.properties.Name_1)\r\n      )\r\n      .map((feature) => feature.properties.Name_2);\r\n\r\n    setLevel2Options(availableLevel2Options);\r\n  }, [filterCountry, level1Filter, outputLevel2Data]);\r\n\r\n  useEffect(() => {\r\n    console.log('Filtering data...');\r\n    const filteredCountryFeatures = [];\r\n    const filteredLevel1Features = [];\r\n    const filteredLevel2Features = [];\r\n  \r\n    if (filterCountry.length > 0 || level1Filter.length > 0 || level2Filter.length > 0) {\r\n      console.log('Applying filters...');\r\n      filteredCountryFeatures.push(\r\n        ...outputCountryData\r\n          .filter((feature) => {\r\n            if (\r\n              level1Filter.length === 0 &&\r\n              level2Filter.length === 0 &&\r\n              filterCountry.length === 0\r\n            ) {\r\n              return true;\r\n            }\r\n            return filterCountry.includes(feature.properties.Country);\r\n          })\r\n          .map((feature) => ({\r\n            type: 'Feature',\r\n            properties: feature.properties,\r\n            geometry: feature.geometry,\r\n          }))\r\n      );\r\n  \r\n      // Level 1 filter should not be affected by Level 2 filter.\r\n      filteredLevel1Features.push(\r\n        ...outputLevel1Data\r\n          .filter((feature) => {\r\n            console.log('Filtering level 1 data...');\r\n            return (\r\n              (level1Filter.length === 0 ||\r\n                level1Filter.includes(feature.properties.Name_1)) &&\r\n              (filterCountry.length === 0 ||\r\n                filterCountry.includes(feature.properties.Country))\r\n            );\r\n          })\r\n          .map((feature) => ({\r\n            type: 'Feature',\r\n            properties: feature.properties,\r\n            geometry: feature.geometry,\r\n          }))\r\n      );\r\n  \r\n      // Level 2 filter.\r\n      filteredLevel2Features.push(\r\n        ...outputLevel2Data\r\n          .filter((feature) => {\r\n            console.log('Filtering level 2 data...');\r\n            return (\r\n              (level1Filter.length === 0 ||\r\n                level1Filter.includes(feature.properties.Name_1)) &&\r\n              (level2Filter.length === 0 ||\r\n                level2Filter.includes(feature.properties.Name_2)) &&\r\n              (filterCountry.length === 0 ||\r\n                filterCountry.includes(feature.properties.Country))\r\n            );\r\n          })\r\n          .map((feature) => ({\r\n            type: 'Feature',\r\n            properties: feature.properties,\r\n            geometry: feature.geometry,\r\n          }))\r\n      );\r\n    } else {\r\n      // Handle the case when no filters are applied.\r\n      filteredCountryFeatures.push(\r\n        ...outputCountryData.map((feature) => ({\r\n          type: 'Feature',\r\n          properties: feature.properties,\r\n          geometry: feature.geometry,\r\n        }))\r\n      );\r\n      filteredLevel1Features.push(\r\n        ...outputLevel1Data.map((feature) => ({\r\n          type: 'Feature',\r\n          properties: feature.properties,\r\n          geometry: feature.geometry,\r\n        }))\r\n      );\r\n      filteredLevel2Features.push(\r\n        ...outputLevel2Data.map((feature) => ({\r\n          type: 'Feature',\r\n          properties: feature.properties,\r\n          geometry: feature.geometry,\r\n        }))\r\n      );\r\n    }\r\n  \r\n    const filteredData = {\r\n      filteredCountryData: {\r\n        type: 'FeatureCollection',\r\n        features: filteredCountryFeatures,\r\n      },\r\n      filteredLevel1Data: {\r\n        type: 'FeatureCollection',\r\n        features: filteredLevel1Features,\r\n      },\r\n      filteredLevel2Data: {\r\n        type: 'FeatureCollection',\r\n        features: filteredLevel2Features,\r\n      },\r\n    };\r\n  \r\n    console.log('Filtered Country data:', filteredData.filteredCountryData); // this has to be sent to App\r\n    console.log('Filtered Lv1 data:', filteredData.filteredLevel1Data);\r\n    console.log('Filtered Lv2 data:', filteredData.filteredLevel2Data);\r\n  \r\n    handleFilteredDataChange(filteredData);\r\n  }, [filterCountry, level1Filter, level2Filter, outputCountryData, outputLevel1Data, outputLevel2Data]);\r\n      \r\n  return (\r\n    <div>\r\n      <h1></h1>\r\n      <div className=\"filter-section\">\r\n        <StaticFilterOptions\r\n          title=\"Country\"\r\n          options={countryOptions}\r\n          selectedOptions={filterCountry}\r\n          setSelectedOptions={setFilterCountry}\r\n        />\r\n      </div>\r\n      <div className=\"filter-section\">\r\n        <StaticFilterOptions\r\n          title=\"Level 1 Name\"\r\n          options={level1Options}\r\n          selectedOptions={level1Filter}\r\n          setSelectedOptions={setLevel1Filter}\r\n        />\r\n      </div>\r\n      <div className=\"filter-section\">\r\n        <StaticFilterOptions\r\n          title=\"Level 2 Name\"\r\n          options={level2Options}\r\n          selectedOptions={level2Filter}\r\n          setSelectedOptions={setLevel2Filter}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mapfilter;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport MapView from './components/MapView';\r\nimport Table from './components/Table';\r\nimport Timebar from './components/Timebar';\r\nimport Sidebar from './components/Sidebar';\r\nimport Draft from './components/Draft';\r\nimport Mapfilter from './components/Mapfilter';\r\nimport DraftRow from './components/DraftRow';\r\n\r\nexport default function App() {\r\n    const [countryData, setCountryData] = useState(null);\r\n    const [level1Data, setLevel1Data] = useState(null);\r\n    const [level2Data, setLevel2Data] = useState(null);//for diff layers\r\n    const [selectedYear, setSelectedYear] = useState(2023);\r\n    const [selectedMonth, setSelectedMonth] = useState(3);\r\n    const [hoveredRegion, setHoveredRegion] = useState(null);\r\n    const [filteredData, setFilteredData] = useState({\r\n      filteredCountryData: [],\r\n      filteredLevel1Data: [],\r\n      filteredLevel2Data: [],\r\n    });\r\n    const handleFilteredDataChange = (filteredData) => {\r\n      setFilteredData(filteredData);\r\n    };\r\n\r\n    const handleYearChange = (year) => {\r\n      setSelectedYear(year);\r\n    };\r\n    const handleMonthChange = (month) => {\r\n      setSelectedMonth(month);\r\n    };\r\n    \r\n    const handleRegionChange= (region) => { \r\n      setHoveredRegion(region);\r\n      \r\n    };\r\n    \r\n  \r\n\r\n    useEffect(() => { //la data de draft si cambia porque esta dentro de UseEffect\r\n        async function fetchData() {\r\n          try {\r\n            const responseCountry = await axios.get('/data/output_country.geojson');\r\n            setCountryData(responseCountry.data);\r\n    \r\n            const responseLevel1 = await axios.get('/data/output_level1.geojson');\r\n            setLevel1Data(responseLevel1.data);\r\n    \r\n            const responseLevel2 = await axios.get('/data/output_level2.geojson');\r\n            setLevel2Data(responseLevel2.data);\r\n              console.log(responseLevel1,responseLevel2,'response levels');\r\n\r\n          } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n          }\r\n        }\r\n    \r\n        fetchData();\r\n      }, []);\r\n\r\n    \r\n\r\n  return (\r\n    <div>\r\n      <MapView regionInfo={hoveredRegion} onChangeYear={handleYearChange} onChangeRegion={handleRegionChange} selectedYear={selectedYear} onChangeMonth={handleMonthChange} selectedMonth={selectedMonth}/>\r\n      \r\n      <Timebar onChangeYear={handleYearChange} selectedYear={selectedYear} onChangeMonth={handleMonthChange} selectedMonth={selectedMonth} />\r\n      <Sidebar countryData={countryData} level1Data={level1Data} level2Data={level2Data} regionInfo={hoveredRegion} onChangeYear={handleYearChange} selectedYear={selectedYear} onChangeMonth={handleMonthChange} selectedMonth={selectedMonth} /> \r\n      <Mapfilter handleFilteredDataChange={handleFilteredDataChange}/>\r\n      <div><Draft countryData={countryData} level1Data={level1Data} level2Data={level2Data} onChangeYear={handleYearChange} selectedYear={selectedYear} onChangeMonth={handleMonthChange} selectedMonth={selectedMonth}/></div>\r\n\r\n    \r\n      \r\n\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}