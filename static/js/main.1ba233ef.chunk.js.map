{"version":3,"sources":["assets/location-dot-solid.svg","assets/picture-placeholder.png","components/Legend.js","components/Sidebar.js","components/MapView.js","components/Timebar.js","components/StaticFilterOptions.js","components/SearchBox.js","components/SearchBoxLocation.js","components/SearchBoxPartner.js","components/SearchBoxAGIRPillars.js","components/SearchBoxTopic.js","components/SearchBoxTarget.js","components/Search.js","components/DataBlock.js","components/DataBlocksList.js","App.js","index.js"],"names":["module","exports","Legend","colors","React","createElement","className","map","layer","i","key","style","backgroundColor","formatNumber","number","toLocaleString","maximumFractionDigits","calculatePercentage","value","total","toFixed","Sidebar","_ref","countryData","level1Data","level2Data","regionInfo","selectedYear","selectedMonth","appendedData","setAppendedData","useState","useEffect","mergedData","features","clickedKey","foundRow","find","feature","properties","Key","Name","Population","concat","Phase1","Percent1","parseFloat","Phase2","Percent2","Phase3","Percent3","Phase4","Percent4","Phase5","Percent5","src","alt","mapboxgl","accessToken","MapView","onChangeRegion","mapContainer","useRef","lng","setLng","lat","setLat","zoom","setZoom","hoveredRegion","setHoveredRegion","handleMove","current","getCenter","getZoom","layerNames","createLayerClickHandler","e","console","log","lngLat","newHoveredRegion","name","popup","remove","Popup","maxWidth","maxHeight","setLngLat","setHTML","Name_2","addTo","isMounted","forEach","layerName","getLayer","setPaintProperty","yearValue","parseInt","monthValue","getMapboxExpression","Map","container","center","on","ref","Timebar","onChangeYear","onChangeMonth","setSelectedYear","setSelectedMonth","handleMonthButtonClick","month","monthNumber","March","June","November","undefined","type","min","max","step","onChange","event","sliderValue","target","selected","Math","round","maxYear","onClick","StaticFilterOptions","title","options","selectedOptions","setSelectedOptions","showDropdown","setShowDropdown","searchText","setSearchText","dropdownRef","handleDocumentClick","contains","document","addEventListener","removeEventListener","filteredOptions","filter","option","toLowerCase","includes","placeholder","id","checked","length","handleSelectAll","htmlFor","selectedOption","handleOptionToggle","SearchBox","searchQuery","setSearchQuery","Countries","SearchBoxLocation","selectedLocations","setSelectedLocations","staticPartners","SearchBoxPartner","selectedPartners","setSelectedPartners","AGIRPillarsOptions","SearchBoxAGIRPillars","selectedAGIRPillars","setSelectedAGIRPillars","TopicOptions","SearchBoxTopic","selectedTopics","setSelectedTopics","TargetOptions","SearchBoxTarget","selectedTargets","setSelectedTargets","Search","DataBlock","project","location","partners","detail","status","color","picPlaceholder","locationIcon","href","rel","DataBlocksList","filteredDataBlock","viewMode","setViewMode","toggleViewMode","exportToCSV","header","Object","keys","join","dataRows","entry","values","csvContent","encodedUri","encodeURI","link","setAttribute","body","appendChild","click","removeChild","index","Project","Location","Partners","Detail","Status","App","setCountryData","setLevel1Data","setLevel2Data","filteredData","setFilteredData","filteredCountryData","filteredLevel1Data","filteredLevel2Data","handleYearChange","year","handleMonthChange","async","responseCountry","axios","get","data","responseLevel1","responseLevel2","error","fetchData","partnersArray","split","partner","trim","some","selectedPartner","locationsArray","selectedLocation","agirPillarsArray","AGIRPillars","AGIRPillar","selectedAGIRPillar","topicsArray","Topic","topic","selectedTopic","targetsArray","Target","selectedTarget","region","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1ba233ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/location-dot-solid.835ddace.svg\";","module.exports = __webpack_public_path__ + \"static/media/picture-placeholder.ae02891c.png\";","import React from 'react';\r\nimport './Legend.css';\r\n\r\nfunction Legend() {\r\n    const layers = ['Phase 1', 'Phase 2', 'Phase 3', 'Phase 4', 'Phase 5', 'No data'];\r\n    const colors = ['#53ca57', '#ffe252', '#fa890f', '#eb3333', '#900101e3','#ffffff'];\r\n\r\n    return (\r\n        <nav className='legend'>\r\n            <div className='legend-container'>\r\n                {layers.map((layer, i) => (\r\n                    <div key={i} className='legend-item'>\r\n                        <span className='legend-key' style={{ backgroundColor: colors[i] }} />\r\n                        <span className='legend-value'>{layer}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Legend;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Sidebar.css';\r\nimport App from '../App';\r\n\r\nfunction Sidebar({ countryData, level1Data, level2Data, regionInfo, selectedYear, selectedMonth }) { //REGIONINFO TRAE EL KEY\r\n  const [appendedData, setAppendedData] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n    if (countryData && level1Data && level2Data){\r\n        const mergedData = [ ...countryData.features, ...level1Data.features, ...level2Data.features ];\r\n        setAppendedData(mergedData);\r\n    };\r\n    \r\n  }, [regionInfo]);\r\n\r\n\r\n  if (!regionInfo) {\r\n    return null;\r\n  }\r\n\r\n  const clickedKey = regionInfo.key;\r\n\r\n  \r\n  let foundRow = null;\r\n  if (appendedData) {\r\n    foundRow = appendedData.find((feature) => feature.properties.Key === clickedKey);\r\n\r\n  }\r\n\r\n  const properties = foundRow ? foundRow.properties : {};\r\n\r\n  const Name= properties['Name_2'];\r\n  const Population = formatNumber(properties[`POP-${selectedYear}-0${selectedMonth}`]);\r\n  const Phase1 = formatNumber(properties[`PH1-${selectedYear}-0${selectedMonth}`]);\r\n  const Percent1 = calculatePercentage(\r\n    parseFloat(properties[`PH1-${selectedYear}-0${selectedMonth}`]),\r\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\r\n  );\r\n\r\n  const Phase2 = formatNumber(properties[`PH2-${selectedYear}-0${selectedMonth}`]);\r\n  const Percent2 = calculatePercentage(\r\n    parseFloat(properties[`PH2-${selectedYear}-0${selectedMonth}`]),\r\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\r\n  );\r\n  const Phase3 = formatNumber(properties[`PH3-${selectedYear}-0${selectedMonth}`]);\r\n  const Percent3 = calculatePercentage(\r\n    parseFloat(properties[`PH3-${selectedYear}-0${selectedMonth}`]),\r\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\r\n  );\r\n  const Phase4 = formatNumber(properties[`PH4-${selectedYear}-0${selectedMonth}`]);\r\n  const Percent4 = calculatePercentage(\r\n    parseFloat(properties[`PH4-${selectedYear}-0${selectedMonth}`]),\r\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\r\n  );\r\n  const Phase5 = formatNumber(properties[`PH5-${selectedYear}-0${selectedMonth}`]);\r\n  const Percent5 = calculatePercentage(\r\n    parseFloat(properties[`PH5-${selectedYear}-0${selectedMonth}`]),\r\n    parseFloat(properties[`POP-${selectedYear}-0${selectedMonth}`])\r\n  );\r\n\r\n  return (\r\n    <nav className='sidebar'>\r\n      <div className='sidebar-container'>\r\n        <div className='logo'>\r\n          <img src='/images/family_icon.jpg' alt='Family Icon' />\r\n          <span className='logo-text'>Food and nutrition situation {selectedYear} </span> {/* adding selected month as trial*/}\r\n        </div>\r\n\r\n        <div className='region-info'>\r\n          {/* Display information about the hovered region */}\r\n          <h2>\r\n            <div>\r\n              <p>\r\n              {Name}\r\n              </p>\r\n            </div>\r\n          </h2>\r\n\r\n          <div className='info-row'>\r\n            <h4>Total population:</h4>\r\n            <p>{Population}</p>\r\n          </div>\r\n\r\n          <div className='info-row'>\r\n            <h4>Phase 1:</h4>\r\n            <p>{Phase1}</p>\r\n            <p>{Percent1}%</p>\r\n          </div>\r\n          <div className='info-row'>\r\n            <h4>Phase 2:</h4>\r\n            <p>{Phase2}</p>\r\n            <p>{Percent2}%</p>\r\n          </div>\r\n          <div className='info-row'>\r\n            <h4>Phase 3:</h4>\r\n            <p>{Phase3}</p>\r\n            <p>{Percent3}%</p>\r\n          </div>\r\n          <div className='info-row'>\r\n            <h4>Phase 4:</h4>\r\n            <p>{Phase4}</p>\r\n            <p>{Percent4}%</p>\r\n          </div>\r\n          <div className='info-row'>\r\n            <h4>Phase 5:</h4>\r\n            <p>{Phase5}</p>\r\n            <p>{Percent5}%</p>\r\n          </div>\r\n          {/* Add more fields as needed */}\r\n        </div>\r\n        {/* More sidebar content */}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction formatNumber(number) {\r\n  return number ? number.toLocaleString('en-US', { maximumFractionDigits: 0 }) : '';\r\n}\r\n\r\nfunction calculatePercentage(value, total) {\r\n  const percentage = total ? ((value || 0) / total) * 100 : 0;\r\n  return percentage.toFixed(2); // Displaying percentage with two decimal places\r\n}\r\n\r\nexport default Sidebar;\r\n","// EVERYTHING WORKS BUT ITS SUPER SLOW WHEN SELECTING REGIONS (ON-CLICK)- NEED TO OPTIMIZE RE-RENDERS IN THE USEEFFECT\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport Legend from './Legend';\r\nimport App from '../App';\r\nimport './MapView.css';\r\nimport Sidebar from './Sidebar';\r\nimport { selected } from '@syncfusion/ej2-react-pivotview';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFyaWFuYWp2LSIsImEiOiJjbGs3eXJmbzEwYXR3M2RxbnRuOHVkaHV3In0.rVa0wb_O5OTeuk07J90w5A';\r\n\r\nfunction MapView({selectedYear, selectedMonth, onChangeRegion}) {\r\n  const mapContainer = useRef(null);\r\n  const map = useRef(null);\r\n  const [lng, setLng] = useState(0);\r\n  const [lat, setLat] = useState(17);\r\n  const [zoom, setZoom] = useState(3.4);\r\n  const [hoveredRegion, setHoveredRegion] = useState(null);\r\n\r\n  const initializeMap = () => {\r\n    map.current = new mapboxgl.Map({\r\n      container: mapContainer.current,\r\n      style: 'mapbox://styles/marianajv-/cllf4b5be012q01pb6nqq4k5x',\r\n      center: [lng, lat],\r\n      zoom: zoom\r\n    });\r\n    map.current.on('move', handleMove);\r\n    layerNames.forEach(layerName => {\r\n      map.current.on('click', layerName, createLayerClickHandler);\r\n    }); \r\n\r\n\r\n  };\r\n\r\n  const handleMove = () => {\r\n    setLng(map.current.getCenter().lng.toFixed(4));\r\n    setLat(map.current.getCenter().lat.toFixed(4));\r\n    setZoom(map.current.getZoom().toFixed(2));\r\n  };\r\n\r\n  const layerNames = ['output_country-2uwmmy', 'output_level1-5iewsu', 'output_level2-8nur76'];\r\n\r\n  const createLayerClickHandler = (e) => {// CLICKHANDLER si lo dejamos en key ya no tiene que depender de year, solo de la posicion \r\n    console.log('clickhandler ran', e.features)\r\n      \r\n    const feature = e.features[0];\r\n    const lngLat = e.lngLat;\r\n\r\n    const newHoveredRegion = {\r\n      name: feature.properties['Name_2'],\r\n      key: feature.properties['Key'] \r\n    };\r\n\r\n    let popup = null;\r\n\r\n    if (popup) {\r\n      popup.remove();\r\n    }\r\n\r\n    popup = new mapboxgl.Popup({\r\n      maxWidth: '100px',\r\n      maxHeight: '50px',\r\n      className: 'custom-popup'\r\n    })\r\n    .setLngLat(lngLat)\r\n    .setHTML(`<h5>${feature.properties.Name_2}</h5>`)\r\n  .addTo(map.current);\r\n\r\n    onChangeRegion(newHoveredRegion);\r\n  };//CLICKHANDLER\r\n  \r\n// separating useffects\r\n\r\nuseEffect(() => {\r\n  let isMounted = true;\r\n\r\n  if (!map.current) {\r\n    initializeMap();\r\n  } else {\r\n\r\n    layerNames.forEach(layerName => {\r\n      const existingLayer = map.current.getLayer(layerName);\r\n      if (existingLayer) {\r\n        map.current.setPaintProperty(\r\n          layerName,\r\n          'fill-color',\r\n          getMapboxExpression(selectedYear, selectedMonth)\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  return () => {\r\n    isMounted = false;\r\n  };\r\n}, [selectedYear, selectedMonth]);\r\n\r\nuseEffect(() => {\r\n  let isMounted = true;\r\n\r\n  if (map.current) {\r\n    map.current.on('move', handleMove);\r\n    \r\n  }\r\n\r\n  return () => {\r\n    isMounted = false;\r\n  };\r\n}, [lat, lng, zoom]);\r\n\r\n\r\n  \r\n    return (\r\n      <div className='view-container'>\r\n        \r\n        <div ref={mapContainer} className=\"map-container\" />\r\n\r\n        <Legend/>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n\r\n  function getMapboxExpression(selectedYear, selectedMonth) {\r\n    const yearValue = parseInt(selectedYear);\r\n    const monthValue = parseInt(selectedMonth);\r\n    \r\n    return [\r\n      'case',\r\n      ['==', ['number', ['get', `CLAS-${yearValue}-0${monthValue}`]], 1], '#53ca57',\r\n      ['==', ['number', ['get', `CLAS-${yearValue}-0${monthValue}`]], 2], '#ffe252',\r\n      ['==', ['number', ['get', `CLAS-${yearValue}-0${monthValue}`]], 3], '#fa890f',\r\n      ['==', ['number', ['get', `CLAS-${yearValue}-0${monthValue}`]], 4], '#eb3333',\r\n      '#ffffff'\r\n    ];\r\n  }\r\n\r\n\r\nexport default MapView;\r\n","\r\nimport React, { useState } from 'react';\r\nimport './Timebar.css';\r\nimport MapView from './MapView';\r\n\r\n\r\nconst Timebar = ({ onChangeYear, onChangeMonth }) => {\r\n  const minYear = 2014;\r\n  const maxYear = 2023;\r\n  const [selectedYear, setSelectedYear] = useState(maxYear);\r\n  const [selectedMonth, setSelectedMonth] = useState(null);\r\n\r\n  const handleSliderChange = (event) => {\r\n    const yearRange = maxYear - minYear;\r\n    const sliderValue = parseFloat(event.target.value);\r\n    const selected = Math.round(minYear + sliderValue * yearRange);\r\n    setSelectedYear(selected);\r\n    if (onChangeYear) {\r\n      onChangeYear(selected);\r\n    }\r\n  };\r\n\r\n  const handleMonthButtonClick = (month) => {\r\n    const monthMap = {\r\n      March: 3,\r\n      June: 6,\r\n      November: 11,\r\n    };\r\n\r\n    const monthNumber = monthMap[month];\r\n    if (monthNumber !== undefined) {\r\n      setSelectedMonth(monthNumber);\r\n      if (onChangeMonth) {\r\n        onChangeMonth(monthNumber);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    \r\n    <div className=\"timebar\">\r\n      <div className=\"year-bar\">\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"1\"\r\n          step=\"0.01\"\r\n          value={(selectedYear - minYear) / (maxYear - minYear)}\r\n          onChange={handleSliderChange}\r\n          className=\"slider\"\r\n        />\r\n        <div className=\"year-indicator\">{selectedYear}</div>\r\n      </div>\r\n      <div className=\"month-buttons\">\r\n        <button\r\n          className={selectedMonth === 3 ? 'selected' : ''}\r\n          onClick={() => handleMonthButtonClick('March')}\r\n        >\r\n          March\r\n        </button>\r\n        <button\r\n          className={selectedMonth === 6 ? 'selected' : ''}\r\n          onClick={() => handleMonthButtonClick('June')}\r\n        >\r\n          June\r\n        </button>\r\n        <button\r\n          className={selectedMonth === 11 ? 'selected' : ''}\r\n          onClick={() => handleMonthButtonClick('November')}\r\n        >\r\n          November\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timebar;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./StaticFilterOptions.css\";\r\n\r\nconst StaticFilterOptions = ({ title, options, selectedOptions, setSelectedOptions }) => {\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const dropdownRef = useRef(null);\r\n\r\n  const handleDocumentClick = (event) => {\r\n    if (!dropdownRef.current.contains(event.target)) {\r\n      setShowDropdown(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleDocumentClick);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleDocumentClick);\r\n    };\r\n  }, []);\r\n\r\n  const handleSelectAll = () => {\r\n    if (selectedOptions.length === options.length) {\r\n      setSelectedOptions([]);\r\n    } else {\r\n      setSelectedOptions(options);\r\n    }\r\n  };\r\n\r\n  const handleOptionToggle = (option) => {\r\n    if (selectedOptions.includes(option)) {\r\n      setSelectedOptions(selectedOptions.filter((selectedOption) => selectedOption !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option]);\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchText(e.target.value);\r\n  };\r\n\r\n  const filteredOptions = options\r\n    .filter(option => option != null)\r\n    .filter((option) => option.toLowerCase().includes(searchText.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"filter-container\">\r\n      <label>{title}:</label>\r\n      <div className=\"search-dropdown\" ref={dropdownRef}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder={`Search by ${title}`}\r\n          value={searchText}\r\n          onChange={handleSearchChange}\r\n          onClick={() => setShowDropdown(true)}\r\n        />\r\n        {showDropdown && (\r\n          <div className=\"checkbox-list\">\r\n            <div>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={`selectAll${title}`}\r\n                value={`selectAll${title}`}\r\n                checked={selectedOptions.length === options.length}\r\n                onChange={handleSelectAll}\r\n              />\r\n              <label htmlFor={`selectAll${title}`}>Select All</label>\r\n            </div>\r\n            {filteredOptions.map((option) => (\r\n              <div key={option}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={option}\r\n                  value={option}\r\n                  checked={selectedOptions.includes(option)}\r\n                  onChange={() => handleOptionToggle(option)}\r\n                />\r\n                <label htmlFor={option}>\r\n                  <span>{option}</span>\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStaticFilterOptions.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  selectedOptions: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  setSelectedOptions: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default StaticFilterOptions;","import React from \"react\";\r\nimport \"../styles/SearchBox.css\";\r\n\r\nconst SearchBox = ({ searchQuery, setSearchQuery }) => {\r\n  return (\r\n    <div className=\"filter-container\">\r\n      <label>Project Name:</label>\r\n      <div className=\"search-dropdown\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by Project Name\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport StaticFilterOptions from \"./StaticFilterOptions\";\r\n\r\nconst Countries = [\r\n  \"Benin\",\r\n  \"Burkina Faso\",\r\n  \"Cabo Verde\",\r\n  \"Cameroon\",\r\n  \"Chad\",\r\n  \"Côte d'Ivoire\",\r\n  \"Gambia\",\r\n  \"Ghana\",\r\n  \"Guinea\",\r\n  \"Guinea-Bissau\",\r\n  \"Liberia\",\r\n  \"Mali\",\r\n  \"Mauritania\",\r\n  \"Niger\",\r\n  \"Nigeria\",\r\n  \"Senegal\",\r\n  \"Sierra Leone\",\r\n  \"Togo\"\r\n  // ... other country options\r\n];\r\n\r\nconst SearchBoxLocation = ({ selectedLocations, setSelectedLocations }) => {\r\n  return (\r\n    <StaticFilterOptions\r\n      title=\"Location\"\r\n      options={Countries}\r\n      selectedOptions={selectedLocations}\r\n      setSelectedOptions={setSelectedLocations}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBoxLocation;\r\n","import React from \"react\";\r\nimport StaticFilterOptions from \"./StaticFilterOptions\";\r\n\r\nconst staticPartners = [\r\n    \"AfDB\",\r\n    \"Austria - OEZA\",\r\n    \"Belgium - Enable\",\r\n    \"BID\",\r\n    \"Canada - Global Affairs\",\r\n    \"Danemark – DANIDA\",\r\n    \"DfiD\",\r\n    \"Espagne – AECID\",\r\n    \"EU\",\r\n    \"Fonds africain de développement\",\r\n    \"France\",\r\n    \"Germany - BMZ\",\r\n    \"HCR\",\r\n    \"Italy\",\r\n    \"Luxembourg\",\r\n    \"Netherlands (The) - MINBUZA\",\r\n    \"OEZA\",\r\n    \"SNV\",\r\n    \"Switzerland - SDC\",\r\n    \"The World Bank\",\r\n    \"UNICEF\"\r\n  // ... other partner options\r\n];\r\n\r\nconst SearchBoxPartner = ({ selectedPartners, setSelectedPartners }) => {\r\n  return (\r\n    <StaticFilterOptions\r\n      title=\"Partners\"\r\n      options={staticPartners}\r\n      selectedOptions={selectedPartners}\r\n      setSelectedOptions={setSelectedPartners}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBoxPartner;\r\n","import React from \"react\";\r\nimport StaticFilterOptions from \"./StaticFilterOptions\";\r\n\r\nconst AGIRPillarsOptions = [\r\n    \"Pillar 1: Improve social protection for the most vulnerable communities and households in order to secure their livelihoods\",\r\n    \"Pillar 2: Strengthen the nutrition of vulnerable households\",\r\n    \"Pillar 3: Sustainably improve agricultural and food productivity and the incomes of the most vulnerable households and improve access to food\",\r\n    \"Pillar 4: Strengthen governance in food and nutrition security\",\r\n      // ... other AGIRPillars options\r\n];\r\n\r\nconst SearchBoxAGIRPillars = ({ selectedAGIRPillars, setSelectedAGIRPillars }) => {\r\n  return (\r\n    <StaticFilterOptions\r\n      title=\"AGIR Pillars\"\r\n      options={AGIRPillarsOptions}\r\n      selectedOptions={selectedAGIRPillars}\r\n      setSelectedOptions={setSelectedAGIRPillars}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBoxAGIRPillars;\r\n","import React from \"react\";\r\nimport StaticFilterOptions from \"./StaticFilterOptions\";\r\n\r\nconst TopicOptions = [\r\n  \"Agriculture & value chains\",\r\n  \"Aide d'urgence\",\r\n  \"Climate, climate change & adaptation\",\r\n  \"Demographic trends\",\r\n  \"Education\",\r\n  \"Employment & revenues\",\r\n  \"Energy\",\r\n  \"Environment\",\r\n  \"Fisheries & aquaculture\",\r\n  \"Food security & zero hunger\",\r\n  \"Forestry & biodiversity\",\r\n  \"Gender\",\r\n  \"Governance & capacity-building\",\r\n  \"Health\",\r\n  \"Livestock & pastoralism\",\r\n  \"Local actors & livelihoods\",\r\n  \"Markets, prices & trade\",\r\n  \"Natural resource management\",\r\n  \"Nutrition\",\r\n  \"Poverty\",\r\n  \"Rural-urban issues\",\r\n  \"Social protection\",\r\n  \"Water & sanitation\",\r\n  \"Youth\"\r\n  // ... other Topic options\r\n];\r\n\r\nconst SearchBoxTopic = ({ selectedTopics, setSelectedTopics }) => {\r\n  return (\r\n    <StaticFilterOptions\r\n      title=\"Topic\"\r\n      options={TopicOptions}\r\n      selectedOptions={selectedTopics}\r\n      setSelectedOptions={setSelectedTopics}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBoxTopic;\r\n","import React from \"react\";\r\nimport StaticFilterOptions from \"./StaticFilterOptions\";\r\n\r\nconst TargetOptions = [\r\n  \"Artisanal fishermen\",\r\n  \"Childer aged under 5 years\",\r\n  \"Institutions\",\r\n  \"Pastoralists & Agro-pastoralists\",\r\n  \"Poor households\",\r\n  \"Poor workers in the informal economy\",\r\n  \"Pregnant and lactating women\",\r\n  \"Refugees\",\r\n  \"Vulnerable small-scale farmers\",\r\n  \"Women\",\r\n  \"Youth\",\r\n  // ... other Target options\r\n];\r\n\r\nconst SearchBoxTarget = ({ selectedTargets, setSelectedTargets }) => {\r\n  return (\r\n    <StaticFilterOptions\r\n      title=\"Target\"\r\n      options={TargetOptions}\r\n      selectedOptions={selectedTargets}\r\n      setSelectedOptions={setSelectedTargets}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBoxTarget;\r\n","import React from \"react\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport SearchBoxLocation from \"./SearchBoxLocation\";\r\nimport SearchBoxPartner from \"./SearchBoxPartner\";\r\nimport SearchBoxAGIRPillars from \"./SearchBoxAGIRPillars\";\r\nimport SearchBoxTopic from \"./SearchBoxTopic\";\r\nimport SearchBoxTarget from \"./SearchBoxTarget\";\r\nimport \"../styles/Search.css\";\r\n\r\nconst Search = ({\r\n  searchQuery,\r\n  setSearchQuery,\r\n  selectedPartners,\r\n  setSelectedPartners,\r\n  selectedLocations,\r\n  setSelectedLocations,\r\n  selectedAGIRPillars,\r\n  setSelectedAGIRPillars,\r\n  selectedTopics,\r\n  setSelectedTopics,\r\n  selectedTargets,\r\n  setSelectedTargets,\r\n}) => {\r\n  return (\r\n    <div className=\"search-container\">\r\n      <SearchBox\r\n        searchQuery={searchQuery}\r\n        setSearchQuery={setSearchQuery}\r\n      />\r\n      <SearchBoxLocation\r\n        selectedLocations={selectedLocations}\r\n        setSelectedLocations={setSelectedLocations}\r\n      />\r\n      <SearchBoxPartner\r\n        selectedPartners={selectedPartners}\r\n        setSelectedPartners={setSelectedPartners}\r\n      />\r\n      <SearchBoxAGIRPillars\r\n        selectedAGIRPillars={selectedAGIRPillars}\r\n        setSelectedAGIRPillars={setSelectedAGIRPillars}\r\n      />\r\n      <SearchBoxTopic\r\n        selectedTopics={selectedTopics}\r\n        setSelectedTopics={setSelectedTopics}\r\n      />\r\n      <SearchBoxTarget\r\n        selectedTargets={selectedTargets}\r\n        setSelectedTargets={setSelectedTargets}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport locationIcon from \"../assets/location-dot-solid.svg\"\r\nimport picPlaceholder from \"../assets/picture-placeholder.png\"\r\nimport \"../styles/DataBlock.css\"\r\n\r\nconst DataBlock = ({ project, location, partners, detail, status }) => {\r\n    return (\r\n      <div className=\"data-block\">\r\n        <div className=\"picture-wrapper\">\r\n          <div className=\"status-indicator\" style={{ color: \"white\", backgroundColor: status === \"COMPLETED\" ? \"green\" : \"orange\" }}>\r\n            {status}\r\n          </div>\r\n          <img src={picPlaceholder} alt=\"placeHolder\"/>\r\n        </div>\r\n        <div className=\"content\">\r\n          <h2 className=\"project-name\">{project}</h2>\r\n          <div className=\"location\">\r\n            <img src={locationIcon} alt=\"Location\" />\r\n            <span>{location}</span>\r\n          </div>\r\n          <p className=\"partners\">Partners: {partners}</p>\r\n          <a className=\"details-link\" href={detail} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <div className=\"more-button\">More</div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default DataBlock;\r\n","import React, { useState } from \"react\";\r\nimport DataBlock from \"./DataBlock\";\r\nimport \"../styles/DataBlocksList.css\";\r\nimport \"../styles/CustomSwitch.css\"; // Make sure to import the custom switch styles\r\n\r\nconst DataBlocksList = ({ filteredDataBlock }) => {\r\n  const [viewMode, setViewMode] = useState(\"grid\"); // Add view mode state\r\n\r\n  const toggleViewMode = () => {\r\n    setViewMode(viewMode === \"grid\" ? \"list\" : \"grid\");\r\n  };\r\n\r\n  const exportToCSV = () => {\r\n    const header = Object.keys(filteredDataBlock[0]).join(\",\"); // Get the keys of the first entry as headers\r\n    const dataRows = filteredDataBlock.map(entry => Object.values(entry).join(\",\")); // Convert each entry to a CSV row\r\n  \r\n    const csvContent = `data:text/csv;charset=utf-8,${header}\\n${dataRows.join(\"\\n\")}`;\r\n  \r\n    const encodedUri = encodeURI(csvContent);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", encodedUri);\r\n    link.setAttribute(\"download\", \"data.csv\");\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"data-blocks-list\">\r\n      <div className=\"view-mode-switch\">\r\n        <span>Grid</span>\r\n        <label className=\"switch\">\r\n          <input type=\"checkbox\" onChange={toggleViewMode} />\r\n          <span className=\"slider round\"></span>\r\n        </label>\r\n        <span>List</span>\r\n      </div>\r\n      <button className=\"export-button\" onClick={exportToCSV}>Export to CSV</button>\r\n      <div className={viewMode === \"grid\" ? \"data-blocks-grid\" : \"data-blocks-list\"}>\r\n        {filteredDataBlock.map((entry, index) => (\r\n          <DataBlock\r\n            key={index}\r\n            project={entry.Project}\r\n            location={entry.Location}\r\n            partners={entry.Partners}\r\n            detail={entry.Detail}\r\n            status={entry.Status}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataBlocksList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport MapView from './components/MapView';\r\nimport Table from './components/Table';\r\nimport Timebar from './components/Timebar';\r\nimport Sidebar from './components/Sidebar';\r\nimport Draft from './components/Draft';\r\nimport Mapfilter from './components/Mapfilter';\r\nimport DraftRow from './components/DraftRow';\r\nimport Search from \"./components/Search\";\r\nimport DataBlocksList from \"./components/DataBlocksList\";\r\nimport data from \"./data/data.json\";\r\n\r\n\r\nexport default function App() {\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const [selectedPartners, setSelectedPartners] = useState([]);\r\n    const [selectedLocations, setSelectedLocations] = useState([]);\r\n    const [selectedAGIRPillars, setSelectedAGIRPillars] = useState([]);\r\n    const [selectedTopics, setSelectedTopics] = useState([]);\r\n    const [selectedTargets, setSelectedTargets] = useState([]);\r\n\r\n    const [countryData, setCountryData] = useState(null);\r\n    const [level1Data, setLevel1Data] = useState(null);\r\n    const [level2Data, setLevel2Data] = useState(null);//for diff layers\r\n    const [selectedYear, setSelectedYear] = useState(2023);\r\n    const [selectedMonth, setSelectedMonth] = useState(3);\r\n    const [hoveredRegion, setHoveredRegion] = useState(null);\r\n    const [filteredData, setFilteredData] = useState({\r\n      filteredCountryData: [],\r\n      filteredLevel1Data: [],\r\n      filteredLevel2Data: [],\r\n    });\r\n    const handleFilteredDataChange = (filteredData) => {\r\n      setFilteredData(filteredData);\r\n    };\r\n\r\n    const handleYearChange = (year) => {\r\n      setSelectedYear(year);\r\n    };\r\n    const handleMonthChange = (month) => {\r\n      setSelectedMonth(month);\r\n    };\r\n    \r\n    const handleRegionChange= (region) => { \r\n      setHoveredRegion(region);\r\n      \r\n    };\r\n    \r\n  \r\n\r\n    useEffect(() => { //la data de draft si cambia porque esta dentro de UseEffect\r\n        async function fetchData() {\r\n          try {\r\n            const responseCountry = await axios.get('/data/output_country.geojson');\r\n            setCountryData(responseCountry.data);\r\n    \r\n            const responseLevel1 = await axios.get('/data/output_level1.geojson');\r\n            setLevel1Data(responseLevel1.data);\r\n    \r\n            const responseLevel2 = await axios.get('/data/output_level2.geojson');\r\n            setLevel2Data(responseLevel2.data);\r\n              console.log(responseLevel1,responseLevel2,'response levels');\r\n\r\n          } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n          }\r\n        }\r\n    \r\n        fetchData();\r\n      }, []);\r\n\r\n    const filteredDataBlock = data\r\n      .filter((entry) => {\r\n        if (selectedPartners.length === 0) {\r\n          return true;\r\n        }\r\n        const partnersArray = (entry.Partners || \"\").split(\";\").map(partner => partner.trim());\r\n        return selectedPartners.some((selectedPartner) => partnersArray.includes(selectedPartner));\r\n      })\r\n      .filter((entry) => {\r\n        if (selectedLocations.length === 0) {\r\n          return true;\r\n        }\r\n        const locationsArray = (entry.Location || \"\").split(\";\").map(location => location.trim());\r\n        return selectedLocations.some((selectedLocation) => locationsArray.includes(selectedLocation))\r\n      })\r\n      .filter((entry) => {\r\n        if (selectedAGIRPillars.length === 0) {\r\n          return true;\r\n        }\r\n        const agirPillarsArray = (entry.AGIRPillars || \"\").split(\";\").map(AGIRPillar => AGIRPillar.trim());\r\n        return selectedAGIRPillars.some((selectedAGIRPillar) => agirPillarsArray.includes(selectedAGIRPillar))\r\n      })\r\n      .filter((entry) => {\r\n        if (selectedTopics.length === 0) {\r\n          return true;\r\n        }\r\n        const topicsArray = (entry.Topic || \"\").split(\";\").map(topic => topic.trim());\r\n        return selectedTopics.some((selectedTopic) => topicsArray.includes(selectedTopic))\r\n      })\r\n      .filter((entry) => {\r\n        if (selectedTargets.length === 0) {\r\n          return true;\r\n        }\r\n        const targetsArray = (entry.Target || \"\").split(\";\").map(target => target.trim());\r\n        return selectedTargets.some((selectedTarget) => targetsArray.includes(selectedTarget))\r\n      })\r\n      .filter((entry) => {\r\n        if (!searchQuery) {\r\n          return true;\r\n        }\r\n        return entry.Project.toLowerCase().includes(searchQuery.toLowerCase());\r\n      });\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <MapView regionInfo={hoveredRegion} onChangeYear={handleYearChange} onChangeRegion={handleRegionChange} selectedYear={selectedYear} onChangeMonth={handleMonthChange} selectedMonth={selectedMonth}/>\r\n      \r\n      <Timebar onChangeYear={handleYearChange} selectedYear={selectedYear} onChangeMonth={handleMonthChange} selectedMonth={selectedMonth} />\r\n      <Sidebar countryData={countryData} level1Data={level1Data} level2Data={level2Data} regionInfo={hoveredRegion} onChangeYear={handleYearChange} selectedYear={selectedYear} onChangeMonth={handleMonthChange} selectedMonth={selectedMonth} /> \r\n      <Search\r\n        searchQuery={searchQuery}\r\n        setSearchQuery={setSearchQuery}\r\n        selectedPartners={selectedPartners}\r\n        setSelectedPartners={setSelectedPartners}\r\n        selectedLocations={selectedLocations}\r\n        setSelectedLocations={setSelectedLocations}\r\n        selectedAGIRPillars={selectedAGIRPillars}\r\n        setSelectedAGIRPillars={setSelectedAGIRPillars}\r\n        selectedTopics={selectedTopics}\r\n        setSelectedTopics={setSelectedTopics}\r\n        selectedTargets={selectedTargets}\r\n        setSelectedTargets={setSelectedTargets}\r\n      />\r\n      <DataBlocksList filteredDataBlock={filteredDataBlock} />\r\n\r\n    </div>\r\n\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}